# Makefile.in generated by automake 1.16.1 from Makefile.am.
# @configure_input@

# Copyright (C) 1994-2018 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@

#
# Copyright 2014, 2015 John C. Bollinger
#
#
# This file is part of the CIF API.
#
# The CIF API is free software: you can redistribute it and/or modify
# it under the terms of the GNU Lesser General Public License as published
# by the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# The CIF API is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Lesser General Public License for more details.
#
# You should have received a copy of the GNU Lesser General Public License
# along with the CIF API.  If not, see <http://www.gnu.org/licenses/>.
#



VPATH = @srcdir@
am__is_gnu_make = { \
  if test -z '$(MAKELEVEL)'; then \
    false; \
  elif test -n '$(MAKE_HOST)'; then \
    true; \
  elif test -n '$(MAKE_VERSION)' && test -n '$(CURDIR)'; then \
    true; \
  else \
    false; \
  fi; \
}
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkglibexecdir = $(libexecdir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
@make_linguist_FALSE@bin_PROGRAMS = $(am__EXEEXT_1)
@make_linguist_TRUE@bin_PROGRAMS = cif_linguist$(EXEEXT) \
@make_linguist_TRUE@	$(am__EXEEXT_1)
@build_examples_TRUE@am__append_1 = \
@build_examples_TRUE@  cif2_syncheck \
@build_examples_TRUE@  cif2_table1 \
@build_examples_TRUE@  cif2_table3 \
@build_examples_TRUE@  cif2_addauthor

check_PROGRAMS = $(am__EXEEXT_2)
TESTS = tests/link.test $(am__EXEEXT_2)
XFAIL_TESTS =
subdir = src
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/ax_icuio.m4 \
	$(top_srcdir)/m4/libtool.m4 $(top_srcdir)/m4/ltoptions.m4 \
	$(top_srcdir)/m4/ltsugar.m4 $(top_srcdir)/m4/ltversion.m4 \
	$(top_srcdir)/m4/lt~obsolete.m4 $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
DIST_COMMON = $(srcdir)/Makefile.am $(include_HEADERS) \
	$(am__DIST_COMMON)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
@build_examples_TRUE@am__EXEEXT_1 = cif2_syncheck$(EXEEXT) \
@build_examples_TRUE@	cif2_table1$(EXEEXT) cif2_table3$(EXEEXT) \
@build_examples_TRUE@	cif2_addauthor$(EXEEXT)
am__installdirs = "$(DESTDIR)$(bindir)" "$(DESTDIR)$(libdir)" \
	"$(DESTDIR)$(includedir)"
am__EXEEXT_2 = tests/test_get_api_version$(EXEEXT) \
	tests/test_create$(EXEEXT) tests/test_create_block1$(EXEEXT) \
	tests/test_create_block2$(EXEEXT) \
	tests/test_get_block$(EXEEXT) \
	tests/test_get_all_blocks$(EXEEXT) \
	tests/test_multiple_cifs$(EXEEXT) \
	tests/test_block_create_frame1$(EXEEXT) \
	tests/test_block_create_frame2$(EXEEXT) \
	tests/test_block_get_frame$(EXEEXT) \
	tests/test_block_get_all_frames$(EXEEXT) \
	tests/test_container_create_loop1$(EXEEXT) \
	tests/test_container_create_loop2$(EXEEXT) \
	tests/test_container_get_category_loop$(EXEEXT) \
	tests/test_container_get_item_loop$(EXEEXT) \
	tests/test_container_get_all_loops$(EXEEXT) \
	tests/test_container_get_code$(EXEEXT) \
	tests/test_nested_frames$(EXEEXT) \
	tests/test_loop_get_names$(EXEEXT) \
	tests/test_value_create$(EXEEXT) \
	tests/test_value_get_number$(EXEEXT) \
	tests/test_value_init_char$(EXEEXT) \
	tests/test_value_copy_char$(EXEEXT) \
	tests/test_value_init_numb$(EXEEXT) \
	tests/test_value_autoinit_numb$(EXEEXT) \
	tests/test_value_parse_numb$(EXEEXT) \
	tests/test_list_elements$(EXEEXT) \
	tests/test_table_elements$(EXEEXT) \
	tests/test_value_clone$(EXEEXT) \
	tests/test_packet_create$(EXEEXT) \
	tests/test_packet_set_item$(EXEEXT) \
	tests/test_packet_remove_item$(EXEEXT) \
	tests/test_container_set_value1$(EXEEXT) \
	tests/test_container_set_value2$(EXEEXT) \
	tests/test_container_get_value$(EXEEXT) \
	tests/test_packet_items$(EXEEXT) \
	tests/test_loop_packets$(EXEEXT) \
	tests/test_loop_modification$(EXEEXT) \
	tests/test_loop_set_category$(EXEEXT) \
	tests/test_loop_destroy$(EXEEXT) \
	tests/test_loop_add_item$(EXEEXT) \
	tests/test_container_remove_item$(EXEEXT) \
	tests/test_loop_misc$(EXEEXT) tests/test_nesting$(EXEEXT) \
	tests/test_container_assert_block$(EXEEXT) \
	tests/test_ustrdup$(EXEEXT) tests/test_normalize$(EXEEXT) \
	tests/test_analyze_string$(EXEEXT) \
	tests/test_container_prune$(EXEEXT) \
	tests/test_parse_10$(EXEEXT) \
	tests/test_parse_simple_data$(EXEEXT) \
	tests/test_parse_list_data$(EXEEXT) \
	tests/test_parse_table_data$(EXEEXT) \
	tests/test_parse_complex_data$(EXEEXT) \
	tests/test_parse_simple_containers$(EXEEXT) \
	tests/test_parse_simple_loops$(EXEEXT) \
	tests/test_parse_cif1_quoting$(EXEEXT) \
	tests/test_parse_cif1_invalid$(EXEEXT) \
	tests/test_parse_containernames$(EXEEXT) \
	tests/test_parse_unicode$(EXEEXT) \
	tests/test_parse_text_fields$(EXEEXT) \
	tests/test_parse_minimal$(EXEEXT) \
	tests/test_parse_triple$(EXEEXT) \
	tests/test_parse_nested$(EXEEXT) \
	tests/test_parse_core$(EXEEXT) \
	tests/test_write_simple$(EXEEXT) \
	tests/test_write_complex$(EXEEXT) \
	tests/test_write_loops$(EXEEXT) \
	tests/test_write_frames$(EXEEXT) tests/test_write_11$(EXEEXT) \
	tests/test_value_set_quoted$(EXEEXT) \
	tests/test_value_try_quoted$(EXEEXT) \
	tests/test_parse_cif11_unquoted$(EXEEXT)
PROGRAMS = $(bin_PROGRAMS)
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__uninstall_files_from_dir = { \
  test -z "$$files" \
    || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \
    || { echo " ( cd '$$dir' && rm -f" $$files ")"; \
         $(am__cd) "$$dir" && rm -f $$files; }; \
  }
LTLIBRARIES = $(lib_LTLIBRARIES)
am__DEPENDENCIES_1 =
libcif_la_DEPENDENCIES = $(am__DEPENDENCIES_1)
am_libcif_la_OBJECTS = cif.lo ciffile.lo container.lo loop.lo map.lo \
	packet.lo parser.lo pktitr.lo utils.lo value.lo
am__objects_1 =
nodist_libcif_la_OBJECTS = $(am__objects_1)
libcif_la_OBJECTS = $(am_libcif_la_OBJECTS) \
	$(nodist_libcif_la_OBJECTS)
AM_V_lt = $(am__v_lt_@AM_V@)
am__v_lt_ = $(am__v_lt_@AM_DEFAULT_V@)
am__v_lt_0 = --silent
am__v_lt_1 = 
libcif_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(libcif_la_LDFLAGS) $(LDFLAGS) -o $@
am__dirstamp = $(am__leading_dot)dirstamp
am_cif2_addauthor_OBJECTS = examples/addauthor.$(OBJEXT)
cif2_addauthor_OBJECTS = $(am_cif2_addauthor_OBJECTS)
cif2_addauthor_LDADD = $(LDADD)
cif2_addauthor_DEPENDENCIES = libcif.la
am_cif2_syncheck_OBJECTS = examples/syncheck.$(OBJEXT)
cif2_syncheck_OBJECTS = $(am_cif2_syncheck_OBJECTS)
cif2_syncheck_LDADD = $(LDADD)
cif2_syncheck_DEPENDENCIES = libcif.la
am_cif2_table1_OBJECTS = examples/table1.$(OBJEXT)
cif2_table1_OBJECTS = $(am_cif2_table1_OBJECTS)
cif2_table1_LDADD = $(LDADD)
cif2_table1_DEPENDENCIES = libcif.la
am_cif2_table3_OBJECTS = examples/table3.$(OBJEXT)
cif2_table3_OBJECTS = $(am_cif2_table3_OBJECTS)
cif2_table3_LDADD = $(LDADD)
cif2_table3_DEPENDENCIES = libcif.la
am_cif_linguist_OBJECTS = tools/linguist.$(OBJEXT)
cif_linguist_OBJECTS = $(am_cif_linguist_OBJECTS)
cif_linguist_LDADD = $(LDADD)
cif_linguist_DEPENDENCIES = libcif.la
tests_test_analyze_string_SOURCES = tests/test_analyze_string.c
tests_test_analyze_string_OBJECTS =  \
	tests/test_analyze_string.$(OBJEXT)
tests_test_analyze_string_LDADD = $(LDADD)
tests_test_analyze_string_DEPENDENCIES = libcif.la
tests_test_block_create_frame1_SOURCES =  \
	tests/test_block_create_frame1.c
tests_test_block_create_frame1_OBJECTS =  \
	tests/test_block_create_frame1.$(OBJEXT)
tests_test_block_create_frame1_LDADD = $(LDADD)
tests_test_block_create_frame1_DEPENDENCIES = libcif.la
tests_test_block_create_frame2_SOURCES =  \
	tests/test_block_create_frame2.c
tests_test_block_create_frame2_OBJECTS =  \
	tests/test_block_create_frame2.$(OBJEXT)
tests_test_block_create_frame2_LDADD = $(LDADD)
tests_test_block_create_frame2_DEPENDENCIES = libcif.la
tests_test_block_get_all_frames_SOURCES =  \
	tests/test_block_get_all_frames.c
tests_test_block_get_all_frames_OBJECTS =  \
	tests/test_block_get_all_frames.$(OBJEXT)
tests_test_block_get_all_frames_LDADD = $(LDADD)
tests_test_block_get_all_frames_DEPENDENCIES = libcif.la
tests_test_block_get_frame_SOURCES = tests/test_block_get_frame.c
tests_test_block_get_frame_OBJECTS =  \
	tests/test_block_get_frame.$(OBJEXT)
tests_test_block_get_frame_LDADD = $(LDADD)
tests_test_block_get_frame_DEPENDENCIES = libcif.la
tests_test_container_assert_block_SOURCES =  \
	tests/test_container_assert_block.c
tests_test_container_assert_block_OBJECTS =  \
	tests/test_container_assert_block.$(OBJEXT)
tests_test_container_assert_block_LDADD = $(LDADD)
tests_test_container_assert_block_DEPENDENCIES = libcif.la
tests_test_container_create_loop1_SOURCES =  \
	tests/test_container_create_loop1.c
tests_test_container_create_loop1_OBJECTS =  \
	tests/test_container_create_loop1.$(OBJEXT)
tests_test_container_create_loop1_LDADD = $(LDADD)
tests_test_container_create_loop1_DEPENDENCIES = libcif.la
tests_test_container_create_loop2_SOURCES =  \
	tests/test_container_create_loop2.c
tests_test_container_create_loop2_OBJECTS =  \
	tests/test_container_create_loop2.$(OBJEXT)
tests_test_container_create_loop2_LDADD = $(LDADD)
tests_test_container_create_loop2_DEPENDENCIES = libcif.la
tests_test_container_get_all_loops_SOURCES =  \
	tests/test_container_get_all_loops.c
tests_test_container_get_all_loops_OBJECTS =  \
	tests/test_container_get_all_loops.$(OBJEXT)
tests_test_container_get_all_loops_LDADD = $(LDADD)
tests_test_container_get_all_loops_DEPENDENCIES = libcif.la
tests_test_container_get_category_loop_SOURCES =  \
	tests/test_container_get_category_loop.c
tests_test_container_get_category_loop_OBJECTS =  \
	tests/test_container_get_category_loop.$(OBJEXT)
tests_test_container_get_category_loop_LDADD = $(LDADD)
tests_test_container_get_category_loop_DEPENDENCIES = libcif.la
tests_test_container_get_code_SOURCES =  \
	tests/test_container_get_code.c
tests_test_container_get_code_OBJECTS =  \
	tests/test_container_get_code.$(OBJEXT)
tests_test_container_get_code_LDADD = $(LDADD)
tests_test_container_get_code_DEPENDENCIES = libcif.la
tests_test_container_get_item_loop_SOURCES =  \
	tests/test_container_get_item_loop.c
tests_test_container_get_item_loop_OBJECTS =  \
	tests/test_container_get_item_loop.$(OBJEXT)
tests_test_container_get_item_loop_LDADD = $(LDADD)
tests_test_container_get_item_loop_DEPENDENCIES = libcif.la
tests_test_container_get_value_SOURCES =  \
	tests/test_container_get_value.c
tests_test_container_get_value_OBJECTS =  \
	tests/test_container_get_value.$(OBJEXT)
tests_test_container_get_value_LDADD = $(LDADD)
tests_test_container_get_value_DEPENDENCIES = libcif.la
tests_test_container_prune_SOURCES = tests/test_container_prune.c
tests_test_container_prune_OBJECTS =  \
	tests/test_container_prune.$(OBJEXT)
tests_test_container_prune_LDADD = $(LDADD)
tests_test_container_prune_DEPENDENCIES = libcif.la
tests_test_container_remove_item_SOURCES =  \
	tests/test_container_remove_item.c
tests_test_container_remove_item_OBJECTS =  \
	tests/test_container_remove_item.$(OBJEXT)
tests_test_container_remove_item_LDADD = $(LDADD)
tests_test_container_remove_item_DEPENDENCIES = libcif.la
tests_test_container_set_value1_SOURCES =  \
	tests/test_container_set_value1.c
tests_test_container_set_value1_OBJECTS =  \
	tests/test_container_set_value1.$(OBJEXT)
tests_test_container_set_value1_LDADD = $(LDADD)
tests_test_container_set_value1_DEPENDENCIES = libcif.la
tests_test_container_set_value2_SOURCES =  \
	tests/test_container_set_value2.c
tests_test_container_set_value2_OBJECTS =  \
	tests/test_container_set_value2.$(OBJEXT)
tests_test_container_set_value2_LDADD = $(LDADD)
tests_test_container_set_value2_DEPENDENCIES = libcif.la
tests_test_create_SOURCES = tests/test_create.c
tests_test_create_OBJECTS = tests/test_create.$(OBJEXT)
tests_test_create_LDADD = $(LDADD)
tests_test_create_DEPENDENCIES = libcif.la
tests_test_create_block1_SOURCES = tests/test_create_block1.c
tests_test_create_block1_OBJECTS = tests/test_create_block1.$(OBJEXT)
tests_test_create_block1_LDADD = $(LDADD)
tests_test_create_block1_DEPENDENCIES = libcif.la
tests_test_create_block2_SOURCES = tests/test_create_block2.c
tests_test_create_block2_OBJECTS = tests/test_create_block2.$(OBJEXT)
tests_test_create_block2_LDADD = $(LDADD)
tests_test_create_block2_DEPENDENCIES = libcif.la
tests_test_get_all_blocks_SOURCES = tests/test_get_all_blocks.c
tests_test_get_all_blocks_OBJECTS =  \
	tests/test_get_all_blocks.$(OBJEXT)
tests_test_get_all_blocks_LDADD = $(LDADD)
tests_test_get_all_blocks_DEPENDENCIES = libcif.la
tests_test_get_api_version_SOURCES = tests/test_get_api_version.c
tests_test_get_api_version_OBJECTS =  \
	tests/test_get_api_version.$(OBJEXT)
tests_test_get_api_version_LDADD = $(LDADD)
tests_test_get_api_version_DEPENDENCIES = libcif.la
tests_test_get_block_SOURCES = tests/test_get_block.c
tests_test_get_block_OBJECTS = tests/test_get_block.$(OBJEXT)
tests_test_get_block_LDADD = $(LDADD)
tests_test_get_block_DEPENDENCIES = libcif.la
tests_test_list_elements_SOURCES = tests/test_list_elements.c
tests_test_list_elements_OBJECTS = tests/test_list_elements.$(OBJEXT)
tests_test_list_elements_LDADD = $(LDADD)
tests_test_list_elements_DEPENDENCIES = libcif.la
tests_test_loop_add_item_SOURCES = tests/test_loop_add_item.c
tests_test_loop_add_item_OBJECTS = tests/test_loop_add_item.$(OBJEXT)
tests_test_loop_add_item_LDADD = $(LDADD)
tests_test_loop_add_item_DEPENDENCIES = libcif.la
tests_test_loop_destroy_SOURCES = tests/test_loop_destroy.c
tests_test_loop_destroy_OBJECTS = tests/test_loop_destroy.$(OBJEXT)
tests_test_loop_destroy_LDADD = $(LDADD)
tests_test_loop_destroy_DEPENDENCIES = libcif.la
tests_test_loop_get_names_SOURCES = tests/test_loop_get_names.c
tests_test_loop_get_names_OBJECTS =  \
	tests/test_loop_get_names.$(OBJEXT)
tests_test_loop_get_names_LDADD = $(LDADD)
tests_test_loop_get_names_DEPENDENCIES = libcif.la
tests_test_loop_misc_SOURCES = tests/test_loop_misc.c
tests_test_loop_misc_OBJECTS = tests/test_loop_misc.$(OBJEXT)
tests_test_loop_misc_LDADD = $(LDADD)
tests_test_loop_misc_DEPENDENCIES = libcif.la
tests_test_loop_modification_SOURCES = tests/test_loop_modification.c
tests_test_loop_modification_OBJECTS =  \
	tests/test_loop_modification.$(OBJEXT)
tests_test_loop_modification_LDADD = $(LDADD)
tests_test_loop_modification_DEPENDENCIES = libcif.la
tests_test_loop_packets_SOURCES = tests/test_loop_packets.c
tests_test_loop_packets_OBJECTS = tests/test_loop_packets.$(OBJEXT)
tests_test_loop_packets_LDADD = $(LDADD)
tests_test_loop_packets_DEPENDENCIES = libcif.la
tests_test_loop_set_category_SOURCES = tests/test_loop_set_category.c
tests_test_loop_set_category_OBJECTS =  \
	tests/test_loop_set_category.$(OBJEXT)
tests_test_loop_set_category_LDADD = $(LDADD)
tests_test_loop_set_category_DEPENDENCIES = libcif.la
tests_test_multiple_cifs_SOURCES = tests/test_multiple_cifs.c
tests_test_multiple_cifs_OBJECTS = tests/test_multiple_cifs.$(OBJEXT)
tests_test_multiple_cifs_LDADD = $(LDADD)
tests_test_multiple_cifs_DEPENDENCIES = libcif.la
tests_test_nested_frames_SOURCES = tests/test_nested_frames.c
tests_test_nested_frames_OBJECTS = tests/test_nested_frames.$(OBJEXT)
tests_test_nested_frames_LDADD = $(LDADD)
tests_test_nested_frames_DEPENDENCIES = libcif.la
tests_test_nesting_SOURCES = tests/test_nesting.c
tests_test_nesting_OBJECTS = tests/test_nesting.$(OBJEXT)
tests_test_nesting_LDADD = $(LDADD)
tests_test_nesting_DEPENDENCIES = libcif.la
tests_test_normalize_SOURCES = tests/test_normalize.c
tests_test_normalize_OBJECTS = tests/test_normalize.$(OBJEXT)
tests_test_normalize_LDADD = $(LDADD)
tests_test_normalize_DEPENDENCIES = libcif.la
tests_test_packet_create_SOURCES = tests/test_packet_create.c
tests_test_packet_create_OBJECTS = tests/test_packet_create.$(OBJEXT)
tests_test_packet_create_LDADD = $(LDADD)
tests_test_packet_create_DEPENDENCIES = libcif.la
tests_test_packet_items_SOURCES = tests/test_packet_items.c
tests_test_packet_items_OBJECTS = tests/test_packet_items.$(OBJEXT)
tests_test_packet_items_LDADD = $(LDADD)
tests_test_packet_items_DEPENDENCIES = libcif.la
tests_test_packet_remove_item_SOURCES =  \
	tests/test_packet_remove_item.c
tests_test_packet_remove_item_OBJECTS =  \
	tests/test_packet_remove_item.$(OBJEXT)
tests_test_packet_remove_item_LDADD = $(LDADD)
tests_test_packet_remove_item_DEPENDENCIES = libcif.la
tests_test_packet_set_item_SOURCES = tests/test_packet_set_item.c
tests_test_packet_set_item_OBJECTS =  \
	tests/test_packet_set_item.$(OBJEXT)
tests_test_packet_set_item_LDADD = $(LDADD)
tests_test_packet_set_item_DEPENDENCIES = libcif.la
tests_test_parse_10_SOURCES = tests/test_parse_10.c
tests_test_parse_10_OBJECTS = tests/test_parse_10.$(OBJEXT)
tests_test_parse_10_LDADD = $(LDADD)
tests_test_parse_10_DEPENDENCIES = libcif.la
tests_test_parse_cif11_unquoted_SOURCES =  \
	tests/test_parse_cif11_unquoted.c
tests_test_parse_cif11_unquoted_OBJECTS =  \
	tests/test_parse_cif11_unquoted.$(OBJEXT)
tests_test_parse_cif11_unquoted_LDADD = $(LDADD)
tests_test_parse_cif11_unquoted_DEPENDENCIES = libcif.la
tests_test_parse_cif1_invalid_SOURCES =  \
	tests/test_parse_cif1_invalid.c
tests_test_parse_cif1_invalid_OBJECTS =  \
	tests/test_parse_cif1_invalid.$(OBJEXT)
tests_test_parse_cif1_invalid_LDADD = $(LDADD)
tests_test_parse_cif1_invalid_DEPENDENCIES = libcif.la
tests_test_parse_cif1_quoting_SOURCES =  \
	tests/test_parse_cif1_quoting.c
tests_test_parse_cif1_quoting_OBJECTS =  \
	tests/test_parse_cif1_quoting.$(OBJEXT)
tests_test_parse_cif1_quoting_LDADD = $(LDADD)
tests_test_parse_cif1_quoting_DEPENDENCIES = libcif.la
tests_test_parse_complex_data_SOURCES =  \
	tests/test_parse_complex_data.c
tests_test_parse_complex_data_OBJECTS =  \
	tests/test_parse_complex_data.$(OBJEXT)
tests_test_parse_complex_data_LDADD = $(LDADD)
tests_test_parse_complex_data_DEPENDENCIES = libcif.la
tests_test_parse_containernames_SOURCES =  \
	tests/test_parse_containernames.c
tests_test_parse_containernames_OBJECTS =  \
	tests/test_parse_containernames.$(OBJEXT)
tests_test_parse_containernames_LDADD = $(LDADD)
tests_test_parse_containernames_DEPENDENCIES = libcif.la
tests_test_parse_core_SOURCES = tests/test_parse_core.c
tests_test_parse_core_OBJECTS = tests/test_parse_core.$(OBJEXT)
tests_test_parse_core_LDADD = $(LDADD)
tests_test_parse_core_DEPENDENCIES = libcif.la
tests_test_parse_list_data_SOURCES = tests/test_parse_list_data.c
tests_test_parse_list_data_OBJECTS =  \
	tests/test_parse_list_data.$(OBJEXT)
tests_test_parse_list_data_LDADD = $(LDADD)
tests_test_parse_list_data_DEPENDENCIES = libcif.la
tests_test_parse_minimal_SOURCES = tests/test_parse_minimal.c
tests_test_parse_minimal_OBJECTS = tests/test_parse_minimal.$(OBJEXT)
tests_test_parse_minimal_LDADD = $(LDADD)
tests_test_parse_minimal_DEPENDENCIES = libcif.la
tests_test_parse_nested_SOURCES = tests/test_parse_nested.c
tests_test_parse_nested_OBJECTS = tests/test_parse_nested.$(OBJEXT)
tests_test_parse_nested_LDADD = $(LDADD)
tests_test_parse_nested_DEPENDENCIES = libcif.la
tests_test_parse_simple_containers_SOURCES =  \
	tests/test_parse_simple_containers.c
tests_test_parse_simple_containers_OBJECTS =  \
	tests/test_parse_simple_containers.$(OBJEXT)
tests_test_parse_simple_containers_LDADD = $(LDADD)
tests_test_parse_simple_containers_DEPENDENCIES = libcif.la
tests_test_parse_simple_data_SOURCES = tests/test_parse_simple_data.c
tests_test_parse_simple_data_OBJECTS =  \
	tests/test_parse_simple_data.$(OBJEXT)
tests_test_parse_simple_data_LDADD = $(LDADD)
tests_test_parse_simple_data_DEPENDENCIES = libcif.la
tests_test_parse_simple_loops_SOURCES =  \
	tests/test_parse_simple_loops.c
tests_test_parse_simple_loops_OBJECTS =  \
	tests/test_parse_simple_loops.$(OBJEXT)
tests_test_parse_simple_loops_LDADD = $(LDADD)
tests_test_parse_simple_loops_DEPENDENCIES = libcif.la
tests_test_parse_table_data_SOURCES = tests/test_parse_table_data.c
tests_test_parse_table_data_OBJECTS =  \
	tests/test_parse_table_data.$(OBJEXT)
tests_test_parse_table_data_LDADD = $(LDADD)
tests_test_parse_table_data_DEPENDENCIES = libcif.la
tests_test_parse_text_fields_SOURCES = tests/test_parse_text_fields.c
tests_test_parse_text_fields_OBJECTS =  \
	tests/test_parse_text_fields.$(OBJEXT)
tests_test_parse_text_fields_LDADD = $(LDADD)
tests_test_parse_text_fields_DEPENDENCIES = libcif.la
tests_test_parse_triple_SOURCES = tests/test_parse_triple.c
tests_test_parse_triple_OBJECTS = tests/test_parse_triple.$(OBJEXT)
tests_test_parse_triple_LDADD = $(LDADD)
tests_test_parse_triple_DEPENDENCIES = libcif.la
tests_test_parse_unicode_SOURCES = tests/test_parse_unicode.c
tests_test_parse_unicode_OBJECTS = tests/test_parse_unicode.$(OBJEXT)
tests_test_parse_unicode_LDADD = $(LDADD)
tests_test_parse_unicode_DEPENDENCIES = libcif.la
tests_test_table_elements_SOURCES = tests/test_table_elements.c
tests_test_table_elements_OBJECTS =  \
	tests/test_table_elements.$(OBJEXT)
tests_test_table_elements_LDADD = $(LDADD)
tests_test_table_elements_DEPENDENCIES = libcif.la
tests_test_ustrdup_SOURCES = tests/test_ustrdup.c
tests_test_ustrdup_OBJECTS = tests/test_ustrdup.$(OBJEXT)
tests_test_ustrdup_LDADD = $(LDADD)
tests_test_ustrdup_DEPENDENCIES = libcif.la
tests_test_value_autoinit_numb_SOURCES =  \
	tests/test_value_autoinit_numb.c
tests_test_value_autoinit_numb_OBJECTS =  \
	tests/test_value_autoinit_numb.$(OBJEXT)
tests_test_value_autoinit_numb_LDADD = $(LDADD)
tests_test_value_autoinit_numb_DEPENDENCIES = libcif.la
tests_test_value_clone_SOURCES = tests/test_value_clone.c
tests_test_value_clone_OBJECTS = tests/test_value_clone.$(OBJEXT)
tests_test_value_clone_LDADD = $(LDADD)
tests_test_value_clone_DEPENDENCIES = libcif.la
tests_test_value_copy_char_SOURCES = tests/test_value_copy_char.c
tests_test_value_copy_char_OBJECTS =  \
	tests/test_value_copy_char.$(OBJEXT)
tests_test_value_copy_char_LDADD = $(LDADD)
tests_test_value_copy_char_DEPENDENCIES = libcif.la
tests_test_value_create_SOURCES = tests/test_value_create.c
tests_test_value_create_OBJECTS = tests/test_value_create.$(OBJEXT)
tests_test_value_create_LDADD = $(LDADD)
tests_test_value_create_DEPENDENCIES = libcif.la
tests_test_value_get_number_SOURCES = tests/test_value_get_number.c
tests_test_value_get_number_OBJECTS =  \
	tests/test_value_get_number.$(OBJEXT)
tests_test_value_get_number_LDADD = $(LDADD)
tests_test_value_get_number_DEPENDENCIES = libcif.la
tests_test_value_init_char_SOURCES = tests/test_value_init_char.c
tests_test_value_init_char_OBJECTS =  \
	tests/test_value_init_char.$(OBJEXT)
tests_test_value_init_char_LDADD = $(LDADD)
tests_test_value_init_char_DEPENDENCIES = libcif.la
tests_test_value_init_numb_SOURCES = tests/test_value_init_numb.c
tests_test_value_init_numb_OBJECTS =  \
	tests/test_value_init_numb.$(OBJEXT)
tests_test_value_init_numb_LDADD = $(LDADD)
tests_test_value_init_numb_DEPENDENCIES = libcif.la
tests_test_value_parse_numb_SOURCES = tests/test_value_parse_numb.c
tests_test_value_parse_numb_OBJECTS =  \
	tests/test_value_parse_numb.$(OBJEXT)
tests_test_value_parse_numb_LDADD = $(LDADD)
tests_test_value_parse_numb_DEPENDENCIES = libcif.la
tests_test_value_set_quoted_SOURCES = tests/test_value_set_quoted.c
tests_test_value_set_quoted_OBJECTS =  \
	tests/test_value_set_quoted.$(OBJEXT)
tests_test_value_set_quoted_LDADD = $(LDADD)
tests_test_value_set_quoted_DEPENDENCIES = libcif.la
tests_test_value_try_quoted_SOURCES = tests/test_value_try_quoted.c
tests_test_value_try_quoted_OBJECTS =  \
	tests/test_value_try_quoted.$(OBJEXT)
tests_test_value_try_quoted_LDADD = $(LDADD)
tests_test_value_try_quoted_DEPENDENCIES = libcif.la
tests_test_write_11_SOURCES = tests/test_write_11.c
tests_test_write_11_OBJECTS = tests/test_write_11.$(OBJEXT)
tests_test_write_11_LDADD = $(LDADD)
tests_test_write_11_DEPENDENCIES = libcif.la
tests_test_write_complex_SOURCES = tests/test_write_complex.c
tests_test_write_complex_OBJECTS = tests/test_write_complex.$(OBJEXT)
tests_test_write_complex_LDADD = $(LDADD)
tests_test_write_complex_DEPENDENCIES = libcif.la
tests_test_write_frames_SOURCES = tests/test_write_frames.c
tests_test_write_frames_OBJECTS = tests/test_write_frames.$(OBJEXT)
tests_test_write_frames_LDADD = $(LDADD)
tests_test_write_frames_DEPENDENCIES = libcif.la
tests_test_write_loops_SOURCES = tests/test_write_loops.c
tests_test_write_loops_OBJECTS = tests/test_write_loops.$(OBJEXT)
tests_test_write_loops_LDADD = $(LDADD)
tests_test_write_loops_DEPENDENCIES = libcif.la
tests_test_write_simple_SOURCES = tests/test_write_simple.c
tests_test_write_simple_OBJECTS = tests/test_write_simple.$(OBJEXT)
tests_test_write_simple_LDADD = $(LDADD)
tests_test_write_simple_DEPENDENCIES = libcif.la
AM_V_P = $(am__v_P_@AM_V@)
am__v_P_ = $(am__v_P_@AM_DEFAULT_V@)
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_@AM_V@)
am__v_GEN_ = $(am__v_GEN_@AM_DEFAULT_V@)
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_@AM_V@)
am__v_at_ = $(am__v_at_@AM_DEFAULT_V@)
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I.@am__isrc@ -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/build-aux/depcomp
am__maybe_remake_depfiles = depfiles
am__depfiles_remade = ./$(DEPDIR)/cif.Plo ./$(DEPDIR)/ciffile.Plo \
	./$(DEPDIR)/container.Plo ./$(DEPDIR)/loop.Plo \
	./$(DEPDIR)/map.Plo ./$(DEPDIR)/packet.Plo \
	./$(DEPDIR)/parser.Plo ./$(DEPDIR)/pktitr.Plo \
	./$(DEPDIR)/utils.Plo ./$(DEPDIR)/value.Plo \
	examples/$(DEPDIR)/addauthor.Po examples/$(DEPDIR)/syncheck.Po \
	examples/$(DEPDIR)/table1.Po examples/$(DEPDIR)/table3.Po \
	tests/$(DEPDIR)/test_analyze_string.Po \
	tests/$(DEPDIR)/test_block_create_frame1.Po \
	tests/$(DEPDIR)/test_block_create_frame2.Po \
	tests/$(DEPDIR)/test_block_get_all_frames.Po \
	tests/$(DEPDIR)/test_block_get_frame.Po \
	tests/$(DEPDIR)/test_container_assert_block.Po \
	tests/$(DEPDIR)/test_container_create_loop1.Po \
	tests/$(DEPDIR)/test_container_create_loop2.Po \
	tests/$(DEPDIR)/test_container_get_all_loops.Po \
	tests/$(DEPDIR)/test_container_get_category_loop.Po \
	tests/$(DEPDIR)/test_container_get_code.Po \
	tests/$(DEPDIR)/test_container_get_item_loop.Po \
	tests/$(DEPDIR)/test_container_get_value.Po \
	tests/$(DEPDIR)/test_container_prune.Po \
	tests/$(DEPDIR)/test_container_remove_item.Po \
	tests/$(DEPDIR)/test_container_set_value1.Po \
	tests/$(DEPDIR)/test_container_set_value2.Po \
	tests/$(DEPDIR)/test_create.Po \
	tests/$(DEPDIR)/test_create_block1.Po \
	tests/$(DEPDIR)/test_create_block2.Po \
	tests/$(DEPDIR)/test_get_all_blocks.Po \
	tests/$(DEPDIR)/test_get_api_version.Po \
	tests/$(DEPDIR)/test_get_block.Po \
	tests/$(DEPDIR)/test_list_elements.Po \
	tests/$(DEPDIR)/test_loop_add_item.Po \
	tests/$(DEPDIR)/test_loop_destroy.Po \
	tests/$(DEPDIR)/test_loop_get_names.Po \
	tests/$(DEPDIR)/test_loop_misc.Po \
	tests/$(DEPDIR)/test_loop_modification.Po \
	tests/$(DEPDIR)/test_loop_packets.Po \
	tests/$(DEPDIR)/test_loop_set_category.Po \
	tests/$(DEPDIR)/test_multiple_cifs.Po \
	tests/$(DEPDIR)/test_nested_frames.Po \
	tests/$(DEPDIR)/test_nesting.Po \
	tests/$(DEPDIR)/test_normalize.Po \
	tests/$(DEPDIR)/test_packet_create.Po \
	tests/$(DEPDIR)/test_packet_items.Po \
	tests/$(DEPDIR)/test_packet_remove_item.Po \
	tests/$(DEPDIR)/test_packet_set_item.Po \
	tests/$(DEPDIR)/test_parse_10.Po \
	tests/$(DEPDIR)/test_parse_cif11_unquoted.Po \
	tests/$(DEPDIR)/test_parse_cif1_invalid.Po \
	tests/$(DEPDIR)/test_parse_cif1_quoting.Po \
	tests/$(DEPDIR)/test_parse_complex_data.Po \
	tests/$(DEPDIR)/test_parse_containernames.Po \
	tests/$(DEPDIR)/test_parse_core.Po \
	tests/$(DEPDIR)/test_parse_list_data.Po \
	tests/$(DEPDIR)/test_parse_minimal.Po \
	tests/$(DEPDIR)/test_parse_nested.Po \
	tests/$(DEPDIR)/test_parse_simple_containers.Po \
	tests/$(DEPDIR)/test_parse_simple_data.Po \
	tests/$(DEPDIR)/test_parse_simple_loops.Po \
	tests/$(DEPDIR)/test_parse_table_data.Po \
	tests/$(DEPDIR)/test_parse_text_fields.Po \
	tests/$(DEPDIR)/test_parse_triple.Po \
	tests/$(DEPDIR)/test_parse_unicode.Po \
	tests/$(DEPDIR)/test_table_elements.Po \
	tests/$(DEPDIR)/test_ustrdup.Po \
	tests/$(DEPDIR)/test_value_autoinit_numb.Po \
	tests/$(DEPDIR)/test_value_clone.Po \
	tests/$(DEPDIR)/test_value_copy_char.Po \
	tests/$(DEPDIR)/test_value_create.Po \
	tests/$(DEPDIR)/test_value_get_number.Po \
	tests/$(DEPDIR)/test_value_init_char.Po \
	tests/$(DEPDIR)/test_value_init_numb.Po \
	tests/$(DEPDIR)/test_value_parse_numb.Po \
	tests/$(DEPDIR)/test_value_set_quoted.Po \
	tests/$(DEPDIR)/test_value_try_quoted.Po \
	tests/$(DEPDIR)/test_write_11.Po \
	tests/$(DEPDIR)/test_write_complex.Po \
	tests/$(DEPDIR)/test_write_frames.Po \
	tests/$(DEPDIR)/test_write_loops.Po \
	tests/$(DEPDIR)/test_write_simple.Po \
	tools/$(DEPDIR)/linguist.Po
am__mv = mv -f
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_@AM_V@)
am__v_CC_ = $(am__v_CC_@AM_DEFAULT_V@)
am__v_CC_0 = @echo "  CC      " $@;
am__v_CC_1 = 
CCLD = $(CC)
LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_@AM_V@)
am__v_CCLD_ = $(am__v_CCLD_@AM_DEFAULT_V@)
am__v_CCLD_0 = @echo "  CCLD    " $@;
am__v_CCLD_1 = 
SOURCES = $(libcif_la_SOURCES) $(nodist_libcif_la_SOURCES) \
	$(cif2_addauthor_SOURCES) $(cif2_syncheck_SOURCES) \
	$(cif2_table1_SOURCES) $(cif2_table3_SOURCES) \
	$(cif_linguist_SOURCES) tests/test_analyze_string.c \
	tests/test_block_create_frame1.c \
	tests/test_block_create_frame2.c \
	tests/test_block_get_all_frames.c tests/test_block_get_frame.c \
	tests/test_container_assert_block.c \
	tests/test_container_create_loop1.c \
	tests/test_container_create_loop2.c \
	tests/test_container_get_all_loops.c \
	tests/test_container_get_category_loop.c \
	tests/test_container_get_code.c \
	tests/test_container_get_item_loop.c \
	tests/test_container_get_value.c tests/test_container_prune.c \
	tests/test_container_remove_item.c \
	tests/test_container_set_value1.c \
	tests/test_container_set_value2.c tests/test_create.c \
	tests/test_create_block1.c tests/test_create_block2.c \
	tests/test_get_all_blocks.c tests/test_get_api_version.c \
	tests/test_get_block.c tests/test_list_elements.c \
	tests/test_loop_add_item.c tests/test_loop_destroy.c \
	tests/test_loop_get_names.c tests/test_loop_misc.c \
	tests/test_loop_modification.c tests/test_loop_packets.c \
	tests/test_loop_set_category.c tests/test_multiple_cifs.c \
	tests/test_nested_frames.c tests/test_nesting.c \
	tests/test_normalize.c tests/test_packet_create.c \
	tests/test_packet_items.c tests/test_packet_remove_item.c \
	tests/test_packet_set_item.c tests/test_parse_10.c \
	tests/test_parse_cif11_unquoted.c \
	tests/test_parse_cif1_invalid.c \
	tests/test_parse_cif1_quoting.c \
	tests/test_parse_complex_data.c \
	tests/test_parse_containernames.c tests/test_parse_core.c \
	tests/test_parse_list_data.c tests/test_parse_minimal.c \
	tests/test_parse_nested.c tests/test_parse_simple_containers.c \
	tests/test_parse_simple_data.c tests/test_parse_simple_loops.c \
	tests/test_parse_table_data.c tests/test_parse_text_fields.c \
	tests/test_parse_triple.c tests/test_parse_unicode.c \
	tests/test_table_elements.c tests/test_ustrdup.c \
	tests/test_value_autoinit_numb.c tests/test_value_clone.c \
	tests/test_value_copy_char.c tests/test_value_create.c \
	tests/test_value_get_number.c tests/test_value_init_char.c \
	tests/test_value_init_numb.c tests/test_value_parse_numb.c \
	tests/test_value_set_quoted.c tests/test_value_try_quoted.c \
	tests/test_write_11.c tests/test_write_complex.c \
	tests/test_write_frames.c tests/test_write_loops.c \
	tests/test_write_simple.c
DIST_SOURCES = $(libcif_la_SOURCES) $(cif2_addauthor_SOURCES) \
	$(cif2_syncheck_SOURCES) $(cif2_table1_SOURCES) \
	$(cif2_table3_SOURCES) $(cif_linguist_SOURCES) \
	tests/test_analyze_string.c tests/test_block_create_frame1.c \
	tests/test_block_create_frame2.c \
	tests/test_block_get_all_frames.c tests/test_block_get_frame.c \
	tests/test_container_assert_block.c \
	tests/test_container_create_loop1.c \
	tests/test_container_create_loop2.c \
	tests/test_container_get_all_loops.c \
	tests/test_container_get_category_loop.c \
	tests/test_container_get_code.c \
	tests/test_container_get_item_loop.c \
	tests/test_container_get_value.c tests/test_container_prune.c \
	tests/test_container_remove_item.c \
	tests/test_container_set_value1.c \
	tests/test_container_set_value2.c tests/test_create.c \
	tests/test_create_block1.c tests/test_create_block2.c \
	tests/test_get_all_blocks.c tests/test_get_api_version.c \
	tests/test_get_block.c tests/test_list_elements.c \
	tests/test_loop_add_item.c tests/test_loop_destroy.c \
	tests/test_loop_get_names.c tests/test_loop_misc.c \
	tests/test_loop_modification.c tests/test_loop_packets.c \
	tests/test_loop_set_category.c tests/test_multiple_cifs.c \
	tests/test_nested_frames.c tests/test_nesting.c \
	tests/test_normalize.c tests/test_packet_create.c \
	tests/test_packet_items.c tests/test_packet_remove_item.c \
	tests/test_packet_set_item.c tests/test_parse_10.c \
	tests/test_parse_cif11_unquoted.c \
	tests/test_parse_cif1_invalid.c \
	tests/test_parse_cif1_quoting.c \
	tests/test_parse_complex_data.c \
	tests/test_parse_containernames.c tests/test_parse_core.c \
	tests/test_parse_list_data.c tests/test_parse_minimal.c \
	tests/test_parse_nested.c tests/test_parse_simple_containers.c \
	tests/test_parse_simple_data.c tests/test_parse_simple_loops.c \
	tests/test_parse_table_data.c tests/test_parse_text_fields.c \
	tests/test_parse_triple.c tests/test_parse_unicode.c \
	tests/test_table_elements.c tests/test_ustrdup.c \
	tests/test_value_autoinit_numb.c tests/test_value_clone.c \
	tests/test_value_copy_char.c tests/test_value_create.c \
	tests/test_value_get_number.c tests/test_value_init_char.c \
	tests/test_value_init_numb.c tests/test_value_parse_numb.c \
	tests/test_value_set_quoted.c tests/test_value_try_quoted.c \
	tests/test_write_11.c tests/test_write_complex.c \
	tests/test_write_frames.c tests/test_write_loops.c \
	tests/test_write_simple.c
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
HEADERS = $(include_HEADERS)
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
ETAGS = etags
CTAGS = ctags
am__tty_colors_dummy = \
  mgn= red= grn= lgn= blu= brg= std=; \
  am__color_tests=no
am__tty_colors = { \
  $(am__tty_colors_dummy); \
  if test "X$(AM_COLOR_TESTS)" = Xno; then \
    am__color_tests=no; \
  elif test "X$(AM_COLOR_TESTS)" = Xalways; then \
    am__color_tests=yes; \
  elif test "X$$TERM" != Xdumb && { test -t 1; } 2>/dev/null; then \
    am__color_tests=yes; \
  fi; \
  if test $$am__color_tests = yes; then \
    red='[0;31m'; \
    grn='[0;32m'; \
    lgn='[1;32m'; \
    blu='[1;34m'; \
    mgn='[0;35m'; \
    brg='[1m'; \
    std='[m'; \
  fi; \
}
am__recheck_rx = ^[ 	]*:recheck:[ 	]*
am__global_test_result_rx = ^[ 	]*:global-test-result:[ 	]*
am__copy_in_global_log_rx = ^[ 	]*:copy-in-global-log:[ 	]*
# A command that, given a newline-separated list of test names on the
# standard input, print the name of the tests that are to be re-run
# upon "make recheck".
am__list_recheck_tests = $(AWK) '{ \
  recheck = 1; \
  while ((rc = (getline line < ($$0 ".trs"))) != 0) \
    { \
      if (rc < 0) \
        { \
          if ((getline line2 < ($$0 ".log")) < 0) \
	    recheck = 0; \
          break; \
        } \
      else if (line ~ /$(am__recheck_rx)[nN][Oo]/) \
        { \
          recheck = 0; \
          break; \
        } \
      else if (line ~ /$(am__recheck_rx)[yY][eE][sS]/) \
        { \
          break; \
        } \
    }; \
  if (recheck) \
    print $$0; \
  close ($$0 ".trs"); \
  close ($$0 ".log"); \
}'
# A command that, given a newline-separated list of test names on the
# standard input, create the global log from their .trs and .log files.
am__create_global_log = $(AWK) ' \
function fatal(msg) \
{ \
  print "fatal: making $@: " msg | "cat >&2"; \
  exit 1; \
} \
function rst_section(header) \
{ \
  print header; \
  len = length(header); \
  for (i = 1; i <= len; i = i + 1) \
    printf "="; \
  printf "\n\n"; \
} \
{ \
  copy_in_global_log = 1; \
  global_test_result = "RUN"; \
  while ((rc = (getline line < ($$0 ".trs"))) != 0) \
    { \
      if (rc < 0) \
         fatal("failed to read from " $$0 ".trs"); \
      if (line ~ /$(am__global_test_result_rx)/) \
        { \
          sub("$(am__global_test_result_rx)", "", line); \
          sub("[ 	]*$$", "", line); \
          global_test_result = line; \
        } \
      else if (line ~ /$(am__copy_in_global_log_rx)[nN][oO]/) \
        copy_in_global_log = 0; \
    }; \
  if (copy_in_global_log) \
    { \
      rst_section(global_test_result ": " $$0); \
      while ((rc = (getline line < ($$0 ".log"))) != 0) \
      { \
        if (rc < 0) \
          fatal("failed to read from " $$0 ".log"); \
        print line; \
      }; \
      printf "\n"; \
    }; \
  close ($$0 ".trs"); \
  close ($$0 ".log"); \
}'
# Restructured Text title.
am__rst_title = { sed 's/.*/   &   /;h;s/./=/g;p;x;s/ *$$//;p;g' && echo; }
# Solaris 10 'make', and several other traditional 'make' implementations,
# pass "-e" to $(SHELL), and POSIX 2008 even requires this.  Work around it
# by disabling -e (using the XSI extension "set +e") if it's set.
am__sh_e_setup = case $$- in *e*) set +e;; esac
# Default flags passed to test drivers.
am__common_driver_flags = \
  --color-tests "$$am__color_tests" \
  --enable-hard-errors "$$am__enable_hard_errors" \
  --expect-failure "$$am__expect_failure"
# To be inserted before the command running the test.  Creates the
# directory for the log if needed.  Stores in $dir the directory
# containing $f, in $tst the test, in $log the log.  Executes the
# developer- defined test setup AM_TESTS_ENVIRONMENT (if any), and
# passes TESTS_ENVIRONMENT.  Set up options for the wrapper that
# will run the test scripts (or their associated LOG_COMPILER, if
# thy have one).
am__check_pre = \
$(am__sh_e_setup);					\
$(am__vpath_adj_setup) $(am__vpath_adj)			\
$(am__tty_colors);					\
srcdir=$(srcdir); export srcdir;			\
case "$@" in						\
  */*) am__odir=`echo "./$@" | sed 's|/[^/]*$$||'`;;	\
    *) am__odir=.;; 					\
esac;							\
test "x$$am__odir" = x"." || test -d "$$am__odir" 	\
  || $(MKDIR_P) "$$am__odir" || exit $$?;		\
if test -f "./$$f"; then dir=./;			\
elif test -f "$$f"; then dir=;				\
else dir="$(srcdir)/"; fi;				\
tst=$$dir$$f; log='$@'; 				\
if test -n '$(DISABLE_HARD_ERRORS)'; then		\
  am__enable_hard_errors=no; 				\
else							\
  am__enable_hard_errors=yes; 				\
fi; 							\
case " $(XFAIL_TESTS) " in				\
  *[\ \	]$$f[\ \	]* | *[\ \	]$$dir$$f[\ \	]*) \
    am__expect_failure=yes;;				\
  *)							\
    am__expect_failure=no;;				\
esac; 							\
$(AM_TESTS_ENVIRONMENT) $(TESTS_ENVIRONMENT)
# A shell command to get the names of the tests scripts with any registered
# extension removed (i.e., equivalently, the names of the test logs, with
# the '.log' extension removed).  The result is saved in the shell variable
# '$bases'.  This honors runtime overriding of TESTS and TEST_LOGS.  Sadly,
# we cannot use something simpler, involving e.g., "$(TEST_LOGS:.log=)",
# since that might cause problem with VPATH rewrites for suffix-less tests.
# See also 'test-harness-vpath-rewrite.sh' and 'test-trs-basic.sh'.
am__set_TESTS_bases = \
  bases='$(TEST_LOGS)'; \
  bases=`for i in $$bases; do echo $$i; done | sed 's/\.log$$//'`; \
  bases=`echo $$bases`
RECHECK_LOGS = $(TEST_LOGS)
AM_RECURSIVE_TARGETS = check recheck
TEST_SUITE_LOG = test-suite.log
TEST_EXTENSIONS = @EXEEXT@ .test
LOG_DRIVER = $(SHELL) $(top_srcdir)/build-aux/test-driver
LOG_COMPILE = $(LOG_COMPILER) $(AM_LOG_FLAGS) $(LOG_FLAGS)
am__set_b = \
  case '$@' in \
    */*) \
      case '$*' in \
        */*) b='$*';; \
          *) b=`echo '$@' | sed 's/\.log$$//'`; \
       esac;; \
    *) \
      b='$*';; \
  esac
am__test_logs1 = $(TESTS:=.log)
am__test_logs2 = $(am__test_logs1:@EXEEXT@.log=.log)
TEST_LOGS = $(am__test_logs2:.test.log=.log)
TEST_LOG_DRIVER = $(SHELL) $(top_srcdir)/build-aux/test-driver
TEST_LOG_COMPILE = $(TEST_LOG_COMPILER) $(AM_TEST_LOG_FLAGS) \
	$(TEST_LOG_FLAGS)
am__DIST_COMMON = $(srcdir)/Makefile.in $(srcdir)/examples.am \
	$(srcdir)/tests.am $(top_srcdir)/build-aux/depcomp \
	$(top_srcdir)/build-aux/test-driver
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = @ACLOCAL@
AMTAR = @AMTAR@
AM_DEFAULT_VERBOSITY = @AM_DEFAULT_VERBOSITY@
AR = @AR@
AS = @AS@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CYGPATH_W = @CYGPATH_W@
C_STD_FLAGS = @C_STD_FLAGS@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
DLLTOOL = @DLLTOOL@
DOXYGEN = @DOXYGEN@
DSYMUTIL = @DSYMUTIL@
DUMPBIN = @DUMPBIN@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
EXEEXT = @EXEEXT@
FGREP = @FGREP@
GREP = @GREP@
ICU_CPPFLAGS = @ICU_CPPFLAGS@
ICU_LIBS = @ICU_LIBS@
ICU_NONPKG_LIBS = @ICU_NONPKG_LIBS@
ICU_PKG = @ICU_PKG@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LD = @LD@
LDFLAGS = @LDFLAGS@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LIBTOOL = @LIBTOOL@
LIPO = @LIPO@
LN_S = @LN_S@
LTLIBOBJS = @LTLIBOBJS@
MAINT = @MAINT@
MAKEINFO = @MAKEINFO@
MANIFEST_TOOL = @MANIFEST_TOOL@
MKDIR_P = @MKDIR_P@
NM = @NM@
NMEDIT = @NMEDIT@
OBJDUMP = @OBJDUMP@
OBJEXT = @OBJEXT@
OTOOL = @OTOOL@
OTOOL64 = @OTOOL64@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_URL = @PACKAGE_URL@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
PKG_CONFIG = @PKG_CONFIG@
PROFILING_CFLAGS = @PROFILING_CFLAGS@
PROFILING_CPPFLAGS = @PROFILING_CPPFLAGS@
PROFILING_LDFLAGS = @PROFILING_LDFLAGS@
RANLIB = @RANLIB@
SED = @SED@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
SQLITE_CPPFLAGS = @SQLITE_CPPFLAGS@
STRIP = @STRIP@
VERSION = @VERSION@
WARNING_FLAGS = @WARNING_FLAGS@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
ac_ct_AR = @ac_ct_AR@
ac_ct_CC = @ac_ct_CC@
ac_ct_DUMPBIN = @ac_ct_DUMPBIN@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
builddir = @builddir@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
srcdir = @srcdir@
sysconfdir = @sysconfdir@
target_alias = @target_alias@
top_build_prefix = @top_build_prefix@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@
lib_LTLIBRARIES = libcif.la
include_HEADERS = cif.h cif_error.h
LIB_CURRENT = 2
LIB_REVISION = 1
LIB_AGE = 1
@win32_FALSE@LIB_VERSION_FLAGS = -version-info $(LIB_CURRENT):$(LIB_REVISION):$(LIB_AGE)
@win32_TRUE@LIB_VERSION_FLAGS = -avoid-version
@win32_FALSE@INSTALL_HOOKS = 
@win32_TRUE@INSTALL_HOOKS = install_import_lib
@win32_FALSE@UNINSTALL_HOOKS = 
@win32_TRUE@UNINSTALL_HOOKS = uninstall_import_lib
@win32_FALSE@CLEANFILES = gmon.out tests/linktest.c tests/linktest.lo \
@win32_FALSE@	tests/linktest
@win32_TRUE@CLEANFILES = libcif.def gmon.out tests/linktest.c \
@win32_TRUE@	tests/linktest.lo tests/linktest
BUILT_SOURCES = internal/schema.h internal/version.h
EXTRA_DIST = notes.txt style.txt tests/assert_cifs.h \
	tests/assert_doubles.h tests/assert_value.h tests/test.h \
	tests/link.test

# For valgrind tests, compile at optimization level -O (no higher):
# TODO: find a cleaner way to do this
#CFLAGS += -O
AM_CPPFLAGS = $(C_STD_FLAGS) $(ICU_CPPFLAGS) $(SQLITE_CPPFLAGS) -I $(top_srcdir)/uthash $(WARNING_FLAGS) $(PROFILING_CPPFLAGS)
AM_CFLAGS = $(PROFILING_CFLAGS)
AM_LDFLAGS = $(PROFILING_LDFLAGS)
LDADD = libcif.la
MAINTAINERCLEANFILES = internal/schema.h internal/version.h
cif2_syncheck_SOURCES = \
  examples/syncheck.c \
  cif.h \
  cif_error.h

cif2_table1_SOURCES = \
  examples/table1.c \
  cif.h

cif2_table3_SOURCES = \
  examples/table3.c \
  cif.h

cif2_addauthor_SOURCES = \
  examples/addauthor.c \
  cif.h

VALGRIND_COMMAND = G_SLICE=always-malloc G_DEBUG=gc-friendly libtool --mode=execute valgrind --tool=memcheck --leak-check=full --leak-resolution=high --read-var-info=yes --track-origins=yes
# --error-exitcode=<number>
compiled_tests = \
    tests/test_get_api_version \
    tests/test_create \
    tests/test_create_block1 \
    tests/test_create_block2 \
    tests/test_get_block \
    tests/test_get_all_blocks \
    tests/test_multiple_cifs \
    tests/test_block_create_frame1 \
    tests/test_block_create_frame2 \
    tests/test_block_get_frame \
    tests/test_block_get_all_frames \
    tests/test_container_create_loop1 \
    tests/test_container_create_loop2 \
    tests/test_container_get_category_loop \
    tests/test_container_get_item_loop \
    tests/test_container_get_all_loops \
    tests/test_container_get_code \
    tests/test_nested_frames \
    tests/test_loop_get_names \
    tests/test_value_create \
    tests/test_value_get_number \
    tests/test_value_init_char \
    tests/test_value_copy_char \
    tests/test_value_init_numb \
    tests/test_value_autoinit_numb \
    tests/test_value_parse_numb \
    tests/test_list_elements \
    tests/test_table_elements \
    tests/test_value_clone \
    tests/test_packet_create \
    tests/test_packet_set_item \
    tests/test_packet_remove_item \
    tests/test_container_set_value1 \
    tests/test_container_set_value2 \
    tests/test_container_get_value \
    tests/test_packet_items \
    tests/test_loop_packets \
    tests/test_loop_modification \
    tests/test_loop_set_category \
    tests/test_loop_destroy \
    tests/test_loop_add_item \
    tests/test_container_remove_item \
    tests/test_loop_misc \
    tests/test_nesting \
    tests/test_container_assert_block \
    tests/test_ustrdup \
    tests/test_normalize \
    tests/test_analyze_string \
    tests/test_container_prune \
    tests/test_parse_10 \
    tests/test_parse_simple_data \
    tests/test_parse_list_data \
    tests/test_parse_table_data \
    tests/test_parse_complex_data \
    tests/test_parse_simple_containers \
    tests/test_parse_simple_loops \
    tests/test_parse_cif1_quoting \
    tests/test_parse_cif1_invalid \
    tests/test_parse_containernames \
    tests/test_parse_unicode \
    tests/test_parse_text_fields \
    tests/test_parse_minimal \
    tests/test_parse_triple \
    tests/test_parse_nested \
    tests/test_parse_core \
    tests/test_write_simple \
    tests/test_write_complex \
    tests/test_write_loops \
    tests/test_write_frames \
    tests/test_write_11 \
    tests/test_value_set_quoted \
    tests/test_value_try_quoted \
    tests/test_parse_cif11_unquoted


# This should really be AM_TESTS_ENVIRONMENT in an Automake that supports that.   v1.11 doesn't.
TESTS_ENVIRONMENT = \
  export CIFAPI_SRC='$(top_srcdir)' \
  export CIF_HEADER_DIR='$(top_srcdir)/src' \
  export CIF_LA=libcif.la \
  export testdir=tests \
  export CC='$(CC)' \
  export CCLD='$(CCLD)' \
  export LIBTOOL='$(LIBTOOL)' \
  export ICU_CPPFLAGS='$(ICU_CPPFLAGS)'\
  export API_VERSION='$(PACKAGE_VERSION)';

libcif_la_SOURCES = \
  cif.c \
  ciffile.c \
  container.c \
  loop.c \
  map.c \
  packet.c \
  parser.c \
  pktitr.c \
  utils.c \
  value.c \
  cif.h \
  internal/buffer.h \
  internal/ciftypes.h \
  internal/compat.h \
  internal/schema.h \
  internal/sql.h \
  internal/utils.h \
  internal/value.h \
  internal/version.h

nodist_libcif_la_SOURCES = $(BUILT_SOURCES)
libcif_la_LIBADD = $(ICU_LIBS)
libcif_la_LDFLAGS = $(AM_LDFLAGS) $(LIB_VERSION_FLAGS) -no-undefined
cif_linguist_SOURCES = tools/linguist.c

# A sed script that processes a slightly-restricted dialect of SQL into a
# comma-delimited list of C string literals, each containing the text of
# one statement:
SED_SQL_MANGLER = \
  s/^  *//; \
  s/  *$$//; \
  $$ s/\([^;]\)$$/\1;/; \
  /^[Bb][Ee][Gg][Ii][Nn][^;]*$$/,/^[Ee][Nn][Dd] *;/ { \
    /^[Ee][Nn][Dd] *;/ b t; \
    b i; \
  }; \
  /;$$/ b t; \
  :i; \
  s/.*/"& "/; H; d; \
  :t; \
  s/^\(.*\);$$/"\1"/; H; s/.*/,/; x

all: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) all-am

.SUFFIXES:
.SUFFIXES: .c .lo .log .o .obj .test .test$(EXEEXT) .trs
$(srcdir)/Makefile.in: @MAINTAINER_MODE_TRUE@ $(srcdir)/Makefile.am $(srcdir)/examples.am $(srcdir)/tests.am $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu src/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --gnu src/Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__maybe_remake_depfiles)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__maybe_remake_depfiles);; \
	esac;
$(srcdir)/examples.am $(srcdir)/tests.am $(am__empty):

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure: @MAINTAINER_MODE_TRUE@ $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4): @MAINTAINER_MODE_TRUE@ $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(bindir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(bindir)" || exit 1; \
	fi; \
	for p in $$list; do echo "$$p $$p"; done | \
	sed 's/$(EXEEXT)$$//' | \
	while read p p1; do if test -f $$p \
	 || test -f $$p1 \
	  ; then echo "$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n;h' \
	    -e 's|.*|.|' \
	    -e 'p;x;s,.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/' | \
	sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1 } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) files[d] = files[d] " " $$1; \
	    else { print "f", $$3 "/" $$4, $$1; } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	    if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	    test -z "$$files" || { \
	    echo " $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files '$(DESTDIR)$(bindir)$$dir'"; \
	    $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files "$(DESTDIR)$(bindir)$$dir" || exit $$?; \
	    } \
	; done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	files=`for p in $$list; do echo "$$p"; done | \
	  sed -e 'h;s,^.*/,,;s/$(EXEEXT)$$//;$(transform)' \
	      -e 's/$$/$(EXEEXT)/' \
	`; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(bindir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(bindir)" && rm -f $$files

clean-binPROGRAMS:
	@list='$(bin_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list

clean-checkPROGRAMS:
	@list='$(check_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list

install-libLTLIBRARIES: $(lib_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	@list='$(lib_LTLIBRARIES)'; test -n "$(libdir)" || list=; \
	list2=; for p in $$list; do \
	  if test -f $$p; then \
	    list2="$$list2 $$p"; \
	  else :; fi; \
	done; \
	test -z "$$list2" || { \
	  echo " $(MKDIR_P) '$(DESTDIR)$(libdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(libdir)" || exit 1; \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 '$(DESTDIR)$(libdir)'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 "$(DESTDIR)$(libdir)"; \
	}

uninstall-libLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(lib_LTLIBRARIES)'; test -n "$(libdir)" || list=; \
	for p in $$list; do \
	  $(am__strip_dir) \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f '$(DESTDIR)$(libdir)/$$f'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f "$(DESTDIR)$(libdir)/$$f"; \
	done

clean-libLTLIBRARIES:
	-test -z "$(lib_LTLIBRARIES)" || rm -f $(lib_LTLIBRARIES)
	@list='$(lib_LTLIBRARIES)'; \
	locs=`for p in $$list; do echo $$p; done | \
	      sed 's|^[^/]*$$|.|; s|/[^/]*$$||; s|$$|/so_locations|' | \
	      sort -u`; \
	test -z "$$locs" || { \
	  echo rm -f $${locs}; \
	  rm -f $${locs}; \
	}

libcif.la: $(libcif_la_OBJECTS) $(libcif_la_DEPENDENCIES) $(EXTRA_libcif_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(libcif_la_LINK) -rpath $(libdir) $(libcif_la_OBJECTS) $(libcif_la_LIBADD) $(LIBS)
examples/$(am__dirstamp):
	@$(MKDIR_P) examples
	@: > examples/$(am__dirstamp)
examples/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) examples/$(DEPDIR)
	@: > examples/$(DEPDIR)/$(am__dirstamp)
examples/addauthor.$(OBJEXT): examples/$(am__dirstamp) \
	examples/$(DEPDIR)/$(am__dirstamp)

cif2_addauthor$(EXEEXT): $(cif2_addauthor_OBJECTS) $(cif2_addauthor_DEPENDENCIES) $(EXTRA_cif2_addauthor_DEPENDENCIES) 
	@rm -f cif2_addauthor$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(cif2_addauthor_OBJECTS) $(cif2_addauthor_LDADD) $(LIBS)
examples/syncheck.$(OBJEXT): examples/$(am__dirstamp) \
	examples/$(DEPDIR)/$(am__dirstamp)

cif2_syncheck$(EXEEXT): $(cif2_syncheck_OBJECTS) $(cif2_syncheck_DEPENDENCIES) $(EXTRA_cif2_syncheck_DEPENDENCIES) 
	@rm -f cif2_syncheck$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(cif2_syncheck_OBJECTS) $(cif2_syncheck_LDADD) $(LIBS)
examples/table1.$(OBJEXT): examples/$(am__dirstamp) \
	examples/$(DEPDIR)/$(am__dirstamp)

cif2_table1$(EXEEXT): $(cif2_table1_OBJECTS) $(cif2_table1_DEPENDENCIES) $(EXTRA_cif2_table1_DEPENDENCIES) 
	@rm -f cif2_table1$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(cif2_table1_OBJECTS) $(cif2_table1_LDADD) $(LIBS)
examples/table3.$(OBJEXT): examples/$(am__dirstamp) \
	examples/$(DEPDIR)/$(am__dirstamp)

cif2_table3$(EXEEXT): $(cif2_table3_OBJECTS) $(cif2_table3_DEPENDENCIES) $(EXTRA_cif2_table3_DEPENDENCIES) 
	@rm -f cif2_table3$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(cif2_table3_OBJECTS) $(cif2_table3_LDADD) $(LIBS)
tools/$(am__dirstamp):
	@$(MKDIR_P) tools
	@: > tools/$(am__dirstamp)
tools/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) tools/$(DEPDIR)
	@: > tools/$(DEPDIR)/$(am__dirstamp)
tools/linguist.$(OBJEXT): tools/$(am__dirstamp) \
	tools/$(DEPDIR)/$(am__dirstamp)

cif_linguist$(EXEEXT): $(cif_linguist_OBJECTS) $(cif_linguist_DEPENDENCIES) $(EXTRA_cif_linguist_DEPENDENCIES) 
	@rm -f cif_linguist$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(cif_linguist_OBJECTS) $(cif_linguist_LDADD) $(LIBS)
tests/$(am__dirstamp):
	@$(MKDIR_P) tests
	@: > tests/$(am__dirstamp)
tests/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) tests/$(DEPDIR)
	@: > tests/$(DEPDIR)/$(am__dirstamp)
tests/test_analyze_string.$(OBJEXT): tests/$(am__dirstamp) \
	tests/$(DEPDIR)/$(am__dirstamp)

tests/test_analyze_string$(EXEEXT): $(tests_test_analyze_string_OBJECTS) $(tests_test_analyze_string_DEPENDENCIES) $(EXTRA_tests_test_analyze_string_DEPENDENCIES) tests/$(am__dirstamp)
	@rm -f tests/test_analyze_string$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tests_test_analyze_string_OBJECTS) $(tests_test_analyze_string_LDADD) $(LIBS)
tests/test_block_create_frame1.$(OBJEXT): tests/$(am__dirstamp) \
	tests/$(DEPDIR)/$(am__dirstamp)

tests/test_block_create_frame1$(EXEEXT): $(tests_test_block_create_frame1_OBJECTS) $(tests_test_block_create_frame1_DEPENDENCIES) $(EXTRA_tests_test_block_create_frame1_DEPENDENCIES) tests/$(am__dirstamp)
	@rm -f tests/test_block_create_frame1$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tests_test_block_create_frame1_OBJECTS) $(tests_test_block_create_frame1_LDADD) $(LIBS)
tests/test_block_create_frame2.$(OBJEXT): tests/$(am__dirstamp) \
	tests/$(DEPDIR)/$(am__dirstamp)

tests/test_block_create_frame2$(EXEEXT): $(tests_test_block_create_frame2_OBJECTS) $(tests_test_block_create_frame2_DEPENDENCIES) $(EXTRA_tests_test_block_create_frame2_DEPENDENCIES) tests/$(am__dirstamp)
	@rm -f tests/test_block_create_frame2$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tests_test_block_create_frame2_OBJECTS) $(tests_test_block_create_frame2_LDADD) $(LIBS)
tests/test_block_get_all_frames.$(OBJEXT): tests/$(am__dirstamp) \
	tests/$(DEPDIR)/$(am__dirstamp)

tests/test_block_get_all_frames$(EXEEXT): $(tests_test_block_get_all_frames_OBJECTS) $(tests_test_block_get_all_frames_DEPENDENCIES) $(EXTRA_tests_test_block_get_all_frames_DEPENDENCIES) tests/$(am__dirstamp)
	@rm -f tests/test_block_get_all_frames$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tests_test_block_get_all_frames_OBJECTS) $(tests_test_block_get_all_frames_LDADD) $(LIBS)
tests/test_block_get_frame.$(OBJEXT): tests/$(am__dirstamp) \
	tests/$(DEPDIR)/$(am__dirstamp)

tests/test_block_get_frame$(EXEEXT): $(tests_test_block_get_frame_OBJECTS) $(tests_test_block_get_frame_DEPENDENCIES) $(EXTRA_tests_test_block_get_frame_DEPENDENCIES) tests/$(am__dirstamp)
	@rm -f tests/test_block_get_frame$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tests_test_block_get_frame_OBJECTS) $(tests_test_block_get_frame_LDADD) $(LIBS)
tests/test_container_assert_block.$(OBJEXT): tests/$(am__dirstamp) \
	tests/$(DEPDIR)/$(am__dirstamp)

tests/test_container_assert_block$(EXEEXT): $(tests_test_container_assert_block_OBJECTS) $(tests_test_container_assert_block_DEPENDENCIES) $(EXTRA_tests_test_container_assert_block_DEPENDENCIES) tests/$(am__dirstamp)
	@rm -f tests/test_container_assert_block$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tests_test_container_assert_block_OBJECTS) $(tests_test_container_assert_block_LDADD) $(LIBS)
tests/test_container_create_loop1.$(OBJEXT): tests/$(am__dirstamp) \
	tests/$(DEPDIR)/$(am__dirstamp)

tests/test_container_create_loop1$(EXEEXT): $(tests_test_container_create_loop1_OBJECTS) $(tests_test_container_create_loop1_DEPENDENCIES) $(EXTRA_tests_test_container_create_loop1_DEPENDENCIES) tests/$(am__dirstamp)
	@rm -f tests/test_container_create_loop1$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tests_test_container_create_loop1_OBJECTS) $(tests_test_container_create_loop1_LDADD) $(LIBS)
tests/test_container_create_loop2.$(OBJEXT): tests/$(am__dirstamp) \
	tests/$(DEPDIR)/$(am__dirstamp)

tests/test_container_create_loop2$(EXEEXT): $(tests_test_container_create_loop2_OBJECTS) $(tests_test_container_create_loop2_DEPENDENCIES) $(EXTRA_tests_test_container_create_loop2_DEPENDENCIES) tests/$(am__dirstamp)
	@rm -f tests/test_container_create_loop2$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tests_test_container_create_loop2_OBJECTS) $(tests_test_container_create_loop2_LDADD) $(LIBS)
tests/test_container_get_all_loops.$(OBJEXT): tests/$(am__dirstamp) \
	tests/$(DEPDIR)/$(am__dirstamp)

tests/test_container_get_all_loops$(EXEEXT): $(tests_test_container_get_all_loops_OBJECTS) $(tests_test_container_get_all_loops_DEPENDENCIES) $(EXTRA_tests_test_container_get_all_loops_DEPENDENCIES) tests/$(am__dirstamp)
	@rm -f tests/test_container_get_all_loops$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tests_test_container_get_all_loops_OBJECTS) $(tests_test_container_get_all_loops_LDADD) $(LIBS)
tests/test_container_get_category_loop.$(OBJEXT):  \
	tests/$(am__dirstamp) tests/$(DEPDIR)/$(am__dirstamp)

tests/test_container_get_category_loop$(EXEEXT): $(tests_test_container_get_category_loop_OBJECTS) $(tests_test_container_get_category_loop_DEPENDENCIES) $(EXTRA_tests_test_container_get_category_loop_DEPENDENCIES) tests/$(am__dirstamp)
	@rm -f tests/test_container_get_category_loop$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tests_test_container_get_category_loop_OBJECTS) $(tests_test_container_get_category_loop_LDADD) $(LIBS)
tests/test_container_get_code.$(OBJEXT): tests/$(am__dirstamp) \
	tests/$(DEPDIR)/$(am__dirstamp)

tests/test_container_get_code$(EXEEXT): $(tests_test_container_get_code_OBJECTS) $(tests_test_container_get_code_DEPENDENCIES) $(EXTRA_tests_test_container_get_code_DEPENDENCIES) tests/$(am__dirstamp)
	@rm -f tests/test_container_get_code$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tests_test_container_get_code_OBJECTS) $(tests_test_container_get_code_LDADD) $(LIBS)
tests/test_container_get_item_loop.$(OBJEXT): tests/$(am__dirstamp) \
	tests/$(DEPDIR)/$(am__dirstamp)

tests/test_container_get_item_loop$(EXEEXT): $(tests_test_container_get_item_loop_OBJECTS) $(tests_test_container_get_item_loop_DEPENDENCIES) $(EXTRA_tests_test_container_get_item_loop_DEPENDENCIES) tests/$(am__dirstamp)
	@rm -f tests/test_container_get_item_loop$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tests_test_container_get_item_loop_OBJECTS) $(tests_test_container_get_item_loop_LDADD) $(LIBS)
tests/test_container_get_value.$(OBJEXT): tests/$(am__dirstamp) \
	tests/$(DEPDIR)/$(am__dirstamp)

tests/test_container_get_value$(EXEEXT): $(tests_test_container_get_value_OBJECTS) $(tests_test_container_get_value_DEPENDENCIES) $(EXTRA_tests_test_container_get_value_DEPENDENCIES) tests/$(am__dirstamp)
	@rm -f tests/test_container_get_value$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tests_test_container_get_value_OBJECTS) $(tests_test_container_get_value_LDADD) $(LIBS)
tests/test_container_prune.$(OBJEXT): tests/$(am__dirstamp) \
	tests/$(DEPDIR)/$(am__dirstamp)

tests/test_container_prune$(EXEEXT): $(tests_test_container_prune_OBJECTS) $(tests_test_container_prune_DEPENDENCIES) $(EXTRA_tests_test_container_prune_DEPENDENCIES) tests/$(am__dirstamp)
	@rm -f tests/test_container_prune$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tests_test_container_prune_OBJECTS) $(tests_test_container_prune_LDADD) $(LIBS)
tests/test_container_remove_item.$(OBJEXT): tests/$(am__dirstamp) \
	tests/$(DEPDIR)/$(am__dirstamp)

tests/test_container_remove_item$(EXEEXT): $(tests_test_container_remove_item_OBJECTS) $(tests_test_container_remove_item_DEPENDENCIES) $(EXTRA_tests_test_container_remove_item_DEPENDENCIES) tests/$(am__dirstamp)
	@rm -f tests/test_container_remove_item$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tests_test_container_remove_item_OBJECTS) $(tests_test_container_remove_item_LDADD) $(LIBS)
tests/test_container_set_value1.$(OBJEXT): tests/$(am__dirstamp) \
	tests/$(DEPDIR)/$(am__dirstamp)

tests/test_container_set_value1$(EXEEXT): $(tests_test_container_set_value1_OBJECTS) $(tests_test_container_set_value1_DEPENDENCIES) $(EXTRA_tests_test_container_set_value1_DEPENDENCIES) tests/$(am__dirstamp)
	@rm -f tests/test_container_set_value1$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tests_test_container_set_value1_OBJECTS) $(tests_test_container_set_value1_LDADD) $(LIBS)
tests/test_container_set_value2.$(OBJEXT): tests/$(am__dirstamp) \
	tests/$(DEPDIR)/$(am__dirstamp)

tests/test_container_set_value2$(EXEEXT): $(tests_test_container_set_value2_OBJECTS) $(tests_test_container_set_value2_DEPENDENCIES) $(EXTRA_tests_test_container_set_value2_DEPENDENCIES) tests/$(am__dirstamp)
	@rm -f tests/test_container_set_value2$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tests_test_container_set_value2_OBJECTS) $(tests_test_container_set_value2_LDADD) $(LIBS)
tests/test_create.$(OBJEXT): tests/$(am__dirstamp) \
	tests/$(DEPDIR)/$(am__dirstamp)

tests/test_create$(EXEEXT): $(tests_test_create_OBJECTS) $(tests_test_create_DEPENDENCIES) $(EXTRA_tests_test_create_DEPENDENCIES) tests/$(am__dirstamp)
	@rm -f tests/test_create$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tests_test_create_OBJECTS) $(tests_test_create_LDADD) $(LIBS)
tests/test_create_block1.$(OBJEXT): tests/$(am__dirstamp) \
	tests/$(DEPDIR)/$(am__dirstamp)

tests/test_create_block1$(EXEEXT): $(tests_test_create_block1_OBJECTS) $(tests_test_create_block1_DEPENDENCIES) $(EXTRA_tests_test_create_block1_DEPENDENCIES) tests/$(am__dirstamp)
	@rm -f tests/test_create_block1$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tests_test_create_block1_OBJECTS) $(tests_test_create_block1_LDADD) $(LIBS)
tests/test_create_block2.$(OBJEXT): tests/$(am__dirstamp) \
	tests/$(DEPDIR)/$(am__dirstamp)

tests/test_create_block2$(EXEEXT): $(tests_test_create_block2_OBJECTS) $(tests_test_create_block2_DEPENDENCIES) $(EXTRA_tests_test_create_block2_DEPENDENCIES) tests/$(am__dirstamp)
	@rm -f tests/test_create_block2$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tests_test_create_block2_OBJECTS) $(tests_test_create_block2_LDADD) $(LIBS)
tests/test_get_all_blocks.$(OBJEXT): tests/$(am__dirstamp) \
	tests/$(DEPDIR)/$(am__dirstamp)

tests/test_get_all_blocks$(EXEEXT): $(tests_test_get_all_blocks_OBJECTS) $(tests_test_get_all_blocks_DEPENDENCIES) $(EXTRA_tests_test_get_all_blocks_DEPENDENCIES) tests/$(am__dirstamp)
	@rm -f tests/test_get_all_blocks$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tests_test_get_all_blocks_OBJECTS) $(tests_test_get_all_blocks_LDADD) $(LIBS)
tests/test_get_api_version.$(OBJEXT): tests/$(am__dirstamp) \
	tests/$(DEPDIR)/$(am__dirstamp)

tests/test_get_api_version$(EXEEXT): $(tests_test_get_api_version_OBJECTS) $(tests_test_get_api_version_DEPENDENCIES) $(EXTRA_tests_test_get_api_version_DEPENDENCIES) tests/$(am__dirstamp)
	@rm -f tests/test_get_api_version$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tests_test_get_api_version_OBJECTS) $(tests_test_get_api_version_LDADD) $(LIBS)
tests/test_get_block.$(OBJEXT): tests/$(am__dirstamp) \
	tests/$(DEPDIR)/$(am__dirstamp)

tests/test_get_block$(EXEEXT): $(tests_test_get_block_OBJECTS) $(tests_test_get_block_DEPENDENCIES) $(EXTRA_tests_test_get_block_DEPENDENCIES) tests/$(am__dirstamp)
	@rm -f tests/test_get_block$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tests_test_get_block_OBJECTS) $(tests_test_get_block_LDADD) $(LIBS)
tests/test_list_elements.$(OBJEXT): tests/$(am__dirstamp) \
	tests/$(DEPDIR)/$(am__dirstamp)

tests/test_list_elements$(EXEEXT): $(tests_test_list_elements_OBJECTS) $(tests_test_list_elements_DEPENDENCIES) $(EXTRA_tests_test_list_elements_DEPENDENCIES) tests/$(am__dirstamp)
	@rm -f tests/test_list_elements$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tests_test_list_elements_OBJECTS) $(tests_test_list_elements_LDADD) $(LIBS)
tests/test_loop_add_item.$(OBJEXT): tests/$(am__dirstamp) \
	tests/$(DEPDIR)/$(am__dirstamp)

tests/test_loop_add_item$(EXEEXT): $(tests_test_loop_add_item_OBJECTS) $(tests_test_loop_add_item_DEPENDENCIES) $(EXTRA_tests_test_loop_add_item_DEPENDENCIES) tests/$(am__dirstamp)
	@rm -f tests/test_loop_add_item$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tests_test_loop_add_item_OBJECTS) $(tests_test_loop_add_item_LDADD) $(LIBS)
tests/test_loop_destroy.$(OBJEXT): tests/$(am__dirstamp) \
	tests/$(DEPDIR)/$(am__dirstamp)

tests/test_loop_destroy$(EXEEXT): $(tests_test_loop_destroy_OBJECTS) $(tests_test_loop_destroy_DEPENDENCIES) $(EXTRA_tests_test_loop_destroy_DEPENDENCIES) tests/$(am__dirstamp)
	@rm -f tests/test_loop_destroy$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tests_test_loop_destroy_OBJECTS) $(tests_test_loop_destroy_LDADD) $(LIBS)
tests/test_loop_get_names.$(OBJEXT): tests/$(am__dirstamp) \
	tests/$(DEPDIR)/$(am__dirstamp)

tests/test_loop_get_names$(EXEEXT): $(tests_test_loop_get_names_OBJECTS) $(tests_test_loop_get_names_DEPENDENCIES) $(EXTRA_tests_test_loop_get_names_DEPENDENCIES) tests/$(am__dirstamp)
	@rm -f tests/test_loop_get_names$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tests_test_loop_get_names_OBJECTS) $(tests_test_loop_get_names_LDADD) $(LIBS)
tests/test_loop_misc.$(OBJEXT): tests/$(am__dirstamp) \
	tests/$(DEPDIR)/$(am__dirstamp)

tests/test_loop_misc$(EXEEXT): $(tests_test_loop_misc_OBJECTS) $(tests_test_loop_misc_DEPENDENCIES) $(EXTRA_tests_test_loop_misc_DEPENDENCIES) tests/$(am__dirstamp)
	@rm -f tests/test_loop_misc$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tests_test_loop_misc_OBJECTS) $(tests_test_loop_misc_LDADD) $(LIBS)
tests/test_loop_modification.$(OBJEXT): tests/$(am__dirstamp) \
	tests/$(DEPDIR)/$(am__dirstamp)

tests/test_loop_modification$(EXEEXT): $(tests_test_loop_modification_OBJECTS) $(tests_test_loop_modification_DEPENDENCIES) $(EXTRA_tests_test_loop_modification_DEPENDENCIES) tests/$(am__dirstamp)
	@rm -f tests/test_loop_modification$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tests_test_loop_modification_OBJECTS) $(tests_test_loop_modification_LDADD) $(LIBS)
tests/test_loop_packets.$(OBJEXT): tests/$(am__dirstamp) \
	tests/$(DEPDIR)/$(am__dirstamp)

tests/test_loop_packets$(EXEEXT): $(tests_test_loop_packets_OBJECTS) $(tests_test_loop_packets_DEPENDENCIES) $(EXTRA_tests_test_loop_packets_DEPENDENCIES) tests/$(am__dirstamp)
	@rm -f tests/test_loop_packets$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tests_test_loop_packets_OBJECTS) $(tests_test_loop_packets_LDADD) $(LIBS)
tests/test_loop_set_category.$(OBJEXT): tests/$(am__dirstamp) \
	tests/$(DEPDIR)/$(am__dirstamp)

tests/test_loop_set_category$(EXEEXT): $(tests_test_loop_set_category_OBJECTS) $(tests_test_loop_set_category_DEPENDENCIES) $(EXTRA_tests_test_loop_set_category_DEPENDENCIES) tests/$(am__dirstamp)
	@rm -f tests/test_loop_set_category$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tests_test_loop_set_category_OBJECTS) $(tests_test_loop_set_category_LDADD) $(LIBS)
tests/test_multiple_cifs.$(OBJEXT): tests/$(am__dirstamp) \
	tests/$(DEPDIR)/$(am__dirstamp)

tests/test_multiple_cifs$(EXEEXT): $(tests_test_multiple_cifs_OBJECTS) $(tests_test_multiple_cifs_DEPENDENCIES) $(EXTRA_tests_test_multiple_cifs_DEPENDENCIES) tests/$(am__dirstamp)
	@rm -f tests/test_multiple_cifs$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tests_test_multiple_cifs_OBJECTS) $(tests_test_multiple_cifs_LDADD) $(LIBS)
tests/test_nested_frames.$(OBJEXT): tests/$(am__dirstamp) \
	tests/$(DEPDIR)/$(am__dirstamp)

tests/test_nested_frames$(EXEEXT): $(tests_test_nested_frames_OBJECTS) $(tests_test_nested_frames_DEPENDENCIES) $(EXTRA_tests_test_nested_frames_DEPENDENCIES) tests/$(am__dirstamp)
	@rm -f tests/test_nested_frames$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tests_test_nested_frames_OBJECTS) $(tests_test_nested_frames_LDADD) $(LIBS)
tests/test_nesting.$(OBJEXT): tests/$(am__dirstamp) \
	tests/$(DEPDIR)/$(am__dirstamp)

tests/test_nesting$(EXEEXT): $(tests_test_nesting_OBJECTS) $(tests_test_nesting_DEPENDENCIES) $(EXTRA_tests_test_nesting_DEPENDENCIES) tests/$(am__dirstamp)
	@rm -f tests/test_nesting$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tests_test_nesting_OBJECTS) $(tests_test_nesting_LDADD) $(LIBS)
tests/test_normalize.$(OBJEXT): tests/$(am__dirstamp) \
	tests/$(DEPDIR)/$(am__dirstamp)

tests/test_normalize$(EXEEXT): $(tests_test_normalize_OBJECTS) $(tests_test_normalize_DEPENDENCIES) $(EXTRA_tests_test_normalize_DEPENDENCIES) tests/$(am__dirstamp)
	@rm -f tests/test_normalize$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tests_test_normalize_OBJECTS) $(tests_test_normalize_LDADD) $(LIBS)
tests/test_packet_create.$(OBJEXT): tests/$(am__dirstamp) \
	tests/$(DEPDIR)/$(am__dirstamp)

tests/test_packet_create$(EXEEXT): $(tests_test_packet_create_OBJECTS) $(tests_test_packet_create_DEPENDENCIES) $(EXTRA_tests_test_packet_create_DEPENDENCIES) tests/$(am__dirstamp)
	@rm -f tests/test_packet_create$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tests_test_packet_create_OBJECTS) $(tests_test_packet_create_LDADD) $(LIBS)
tests/test_packet_items.$(OBJEXT): tests/$(am__dirstamp) \
	tests/$(DEPDIR)/$(am__dirstamp)

tests/test_packet_items$(EXEEXT): $(tests_test_packet_items_OBJECTS) $(tests_test_packet_items_DEPENDENCIES) $(EXTRA_tests_test_packet_items_DEPENDENCIES) tests/$(am__dirstamp)
	@rm -f tests/test_packet_items$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tests_test_packet_items_OBJECTS) $(tests_test_packet_items_LDADD) $(LIBS)
tests/test_packet_remove_item.$(OBJEXT): tests/$(am__dirstamp) \
	tests/$(DEPDIR)/$(am__dirstamp)

tests/test_packet_remove_item$(EXEEXT): $(tests_test_packet_remove_item_OBJECTS) $(tests_test_packet_remove_item_DEPENDENCIES) $(EXTRA_tests_test_packet_remove_item_DEPENDENCIES) tests/$(am__dirstamp)
	@rm -f tests/test_packet_remove_item$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tests_test_packet_remove_item_OBJECTS) $(tests_test_packet_remove_item_LDADD) $(LIBS)
tests/test_packet_set_item.$(OBJEXT): tests/$(am__dirstamp) \
	tests/$(DEPDIR)/$(am__dirstamp)

tests/test_packet_set_item$(EXEEXT): $(tests_test_packet_set_item_OBJECTS) $(tests_test_packet_set_item_DEPENDENCIES) $(EXTRA_tests_test_packet_set_item_DEPENDENCIES) tests/$(am__dirstamp)
	@rm -f tests/test_packet_set_item$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tests_test_packet_set_item_OBJECTS) $(tests_test_packet_set_item_LDADD) $(LIBS)
tests/test_parse_10.$(OBJEXT): tests/$(am__dirstamp) \
	tests/$(DEPDIR)/$(am__dirstamp)

tests/test_parse_10$(EXEEXT): $(tests_test_parse_10_OBJECTS) $(tests_test_parse_10_DEPENDENCIES) $(EXTRA_tests_test_parse_10_DEPENDENCIES) tests/$(am__dirstamp)
	@rm -f tests/test_parse_10$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tests_test_parse_10_OBJECTS) $(tests_test_parse_10_LDADD) $(LIBS)
tests/test_parse_cif11_unquoted.$(OBJEXT): tests/$(am__dirstamp) \
	tests/$(DEPDIR)/$(am__dirstamp)

tests/test_parse_cif11_unquoted$(EXEEXT): $(tests_test_parse_cif11_unquoted_OBJECTS) $(tests_test_parse_cif11_unquoted_DEPENDENCIES) $(EXTRA_tests_test_parse_cif11_unquoted_DEPENDENCIES) tests/$(am__dirstamp)
	@rm -f tests/test_parse_cif11_unquoted$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tests_test_parse_cif11_unquoted_OBJECTS) $(tests_test_parse_cif11_unquoted_LDADD) $(LIBS)
tests/test_parse_cif1_invalid.$(OBJEXT): tests/$(am__dirstamp) \
	tests/$(DEPDIR)/$(am__dirstamp)

tests/test_parse_cif1_invalid$(EXEEXT): $(tests_test_parse_cif1_invalid_OBJECTS) $(tests_test_parse_cif1_invalid_DEPENDENCIES) $(EXTRA_tests_test_parse_cif1_invalid_DEPENDENCIES) tests/$(am__dirstamp)
	@rm -f tests/test_parse_cif1_invalid$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tests_test_parse_cif1_invalid_OBJECTS) $(tests_test_parse_cif1_invalid_LDADD) $(LIBS)
tests/test_parse_cif1_quoting.$(OBJEXT): tests/$(am__dirstamp) \
	tests/$(DEPDIR)/$(am__dirstamp)

tests/test_parse_cif1_quoting$(EXEEXT): $(tests_test_parse_cif1_quoting_OBJECTS) $(tests_test_parse_cif1_quoting_DEPENDENCIES) $(EXTRA_tests_test_parse_cif1_quoting_DEPENDENCIES) tests/$(am__dirstamp)
	@rm -f tests/test_parse_cif1_quoting$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tests_test_parse_cif1_quoting_OBJECTS) $(tests_test_parse_cif1_quoting_LDADD) $(LIBS)
tests/test_parse_complex_data.$(OBJEXT): tests/$(am__dirstamp) \
	tests/$(DEPDIR)/$(am__dirstamp)

tests/test_parse_complex_data$(EXEEXT): $(tests_test_parse_complex_data_OBJECTS) $(tests_test_parse_complex_data_DEPENDENCIES) $(EXTRA_tests_test_parse_complex_data_DEPENDENCIES) tests/$(am__dirstamp)
	@rm -f tests/test_parse_complex_data$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tests_test_parse_complex_data_OBJECTS) $(tests_test_parse_complex_data_LDADD) $(LIBS)
tests/test_parse_containernames.$(OBJEXT): tests/$(am__dirstamp) \
	tests/$(DEPDIR)/$(am__dirstamp)

tests/test_parse_containernames$(EXEEXT): $(tests_test_parse_containernames_OBJECTS) $(tests_test_parse_containernames_DEPENDENCIES) $(EXTRA_tests_test_parse_containernames_DEPENDENCIES) tests/$(am__dirstamp)
	@rm -f tests/test_parse_containernames$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tests_test_parse_containernames_OBJECTS) $(tests_test_parse_containernames_LDADD) $(LIBS)
tests/test_parse_core.$(OBJEXT): tests/$(am__dirstamp) \
	tests/$(DEPDIR)/$(am__dirstamp)

tests/test_parse_core$(EXEEXT): $(tests_test_parse_core_OBJECTS) $(tests_test_parse_core_DEPENDENCIES) $(EXTRA_tests_test_parse_core_DEPENDENCIES) tests/$(am__dirstamp)
	@rm -f tests/test_parse_core$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tests_test_parse_core_OBJECTS) $(tests_test_parse_core_LDADD) $(LIBS)
tests/test_parse_list_data.$(OBJEXT): tests/$(am__dirstamp) \
	tests/$(DEPDIR)/$(am__dirstamp)

tests/test_parse_list_data$(EXEEXT): $(tests_test_parse_list_data_OBJECTS) $(tests_test_parse_list_data_DEPENDENCIES) $(EXTRA_tests_test_parse_list_data_DEPENDENCIES) tests/$(am__dirstamp)
	@rm -f tests/test_parse_list_data$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tests_test_parse_list_data_OBJECTS) $(tests_test_parse_list_data_LDADD) $(LIBS)
tests/test_parse_minimal.$(OBJEXT): tests/$(am__dirstamp) \
	tests/$(DEPDIR)/$(am__dirstamp)

tests/test_parse_minimal$(EXEEXT): $(tests_test_parse_minimal_OBJECTS) $(tests_test_parse_minimal_DEPENDENCIES) $(EXTRA_tests_test_parse_minimal_DEPENDENCIES) tests/$(am__dirstamp)
	@rm -f tests/test_parse_minimal$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tests_test_parse_minimal_OBJECTS) $(tests_test_parse_minimal_LDADD) $(LIBS)
tests/test_parse_nested.$(OBJEXT): tests/$(am__dirstamp) \
	tests/$(DEPDIR)/$(am__dirstamp)

tests/test_parse_nested$(EXEEXT): $(tests_test_parse_nested_OBJECTS) $(tests_test_parse_nested_DEPENDENCIES) $(EXTRA_tests_test_parse_nested_DEPENDENCIES) tests/$(am__dirstamp)
	@rm -f tests/test_parse_nested$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tests_test_parse_nested_OBJECTS) $(tests_test_parse_nested_LDADD) $(LIBS)
tests/test_parse_simple_containers.$(OBJEXT): tests/$(am__dirstamp) \
	tests/$(DEPDIR)/$(am__dirstamp)

tests/test_parse_simple_containers$(EXEEXT): $(tests_test_parse_simple_containers_OBJECTS) $(tests_test_parse_simple_containers_DEPENDENCIES) $(EXTRA_tests_test_parse_simple_containers_DEPENDENCIES) tests/$(am__dirstamp)
	@rm -f tests/test_parse_simple_containers$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tests_test_parse_simple_containers_OBJECTS) $(tests_test_parse_simple_containers_LDADD) $(LIBS)
tests/test_parse_simple_data.$(OBJEXT): tests/$(am__dirstamp) \
	tests/$(DEPDIR)/$(am__dirstamp)

tests/test_parse_simple_data$(EXEEXT): $(tests_test_parse_simple_data_OBJECTS) $(tests_test_parse_simple_data_DEPENDENCIES) $(EXTRA_tests_test_parse_simple_data_DEPENDENCIES) tests/$(am__dirstamp)
	@rm -f tests/test_parse_simple_data$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tests_test_parse_simple_data_OBJECTS) $(tests_test_parse_simple_data_LDADD) $(LIBS)
tests/test_parse_simple_loops.$(OBJEXT): tests/$(am__dirstamp) \
	tests/$(DEPDIR)/$(am__dirstamp)

tests/test_parse_simple_loops$(EXEEXT): $(tests_test_parse_simple_loops_OBJECTS) $(tests_test_parse_simple_loops_DEPENDENCIES) $(EXTRA_tests_test_parse_simple_loops_DEPENDENCIES) tests/$(am__dirstamp)
	@rm -f tests/test_parse_simple_loops$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tests_test_parse_simple_loops_OBJECTS) $(tests_test_parse_simple_loops_LDADD) $(LIBS)
tests/test_parse_table_data.$(OBJEXT): tests/$(am__dirstamp) \
	tests/$(DEPDIR)/$(am__dirstamp)

tests/test_parse_table_data$(EXEEXT): $(tests_test_parse_table_data_OBJECTS) $(tests_test_parse_table_data_DEPENDENCIES) $(EXTRA_tests_test_parse_table_data_DEPENDENCIES) tests/$(am__dirstamp)
	@rm -f tests/test_parse_table_data$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tests_test_parse_table_data_OBJECTS) $(tests_test_parse_table_data_LDADD) $(LIBS)
tests/test_parse_text_fields.$(OBJEXT): tests/$(am__dirstamp) \
	tests/$(DEPDIR)/$(am__dirstamp)

tests/test_parse_text_fields$(EXEEXT): $(tests_test_parse_text_fields_OBJECTS) $(tests_test_parse_text_fields_DEPENDENCIES) $(EXTRA_tests_test_parse_text_fields_DEPENDENCIES) tests/$(am__dirstamp)
	@rm -f tests/test_parse_text_fields$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tests_test_parse_text_fields_OBJECTS) $(tests_test_parse_text_fields_LDADD) $(LIBS)
tests/test_parse_triple.$(OBJEXT): tests/$(am__dirstamp) \
	tests/$(DEPDIR)/$(am__dirstamp)

tests/test_parse_triple$(EXEEXT): $(tests_test_parse_triple_OBJECTS) $(tests_test_parse_triple_DEPENDENCIES) $(EXTRA_tests_test_parse_triple_DEPENDENCIES) tests/$(am__dirstamp)
	@rm -f tests/test_parse_triple$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tests_test_parse_triple_OBJECTS) $(tests_test_parse_triple_LDADD) $(LIBS)
tests/test_parse_unicode.$(OBJEXT): tests/$(am__dirstamp) \
	tests/$(DEPDIR)/$(am__dirstamp)

tests/test_parse_unicode$(EXEEXT): $(tests_test_parse_unicode_OBJECTS) $(tests_test_parse_unicode_DEPENDENCIES) $(EXTRA_tests_test_parse_unicode_DEPENDENCIES) tests/$(am__dirstamp)
	@rm -f tests/test_parse_unicode$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tests_test_parse_unicode_OBJECTS) $(tests_test_parse_unicode_LDADD) $(LIBS)
tests/test_table_elements.$(OBJEXT): tests/$(am__dirstamp) \
	tests/$(DEPDIR)/$(am__dirstamp)

tests/test_table_elements$(EXEEXT): $(tests_test_table_elements_OBJECTS) $(tests_test_table_elements_DEPENDENCIES) $(EXTRA_tests_test_table_elements_DEPENDENCIES) tests/$(am__dirstamp)
	@rm -f tests/test_table_elements$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tests_test_table_elements_OBJECTS) $(tests_test_table_elements_LDADD) $(LIBS)
tests/test_ustrdup.$(OBJEXT): tests/$(am__dirstamp) \
	tests/$(DEPDIR)/$(am__dirstamp)

tests/test_ustrdup$(EXEEXT): $(tests_test_ustrdup_OBJECTS) $(tests_test_ustrdup_DEPENDENCIES) $(EXTRA_tests_test_ustrdup_DEPENDENCIES) tests/$(am__dirstamp)
	@rm -f tests/test_ustrdup$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tests_test_ustrdup_OBJECTS) $(tests_test_ustrdup_LDADD) $(LIBS)
tests/test_value_autoinit_numb.$(OBJEXT): tests/$(am__dirstamp) \
	tests/$(DEPDIR)/$(am__dirstamp)

tests/test_value_autoinit_numb$(EXEEXT): $(tests_test_value_autoinit_numb_OBJECTS) $(tests_test_value_autoinit_numb_DEPENDENCIES) $(EXTRA_tests_test_value_autoinit_numb_DEPENDENCIES) tests/$(am__dirstamp)
	@rm -f tests/test_value_autoinit_numb$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tests_test_value_autoinit_numb_OBJECTS) $(tests_test_value_autoinit_numb_LDADD) $(LIBS)
tests/test_value_clone.$(OBJEXT): tests/$(am__dirstamp) \
	tests/$(DEPDIR)/$(am__dirstamp)

tests/test_value_clone$(EXEEXT): $(tests_test_value_clone_OBJECTS) $(tests_test_value_clone_DEPENDENCIES) $(EXTRA_tests_test_value_clone_DEPENDENCIES) tests/$(am__dirstamp)
	@rm -f tests/test_value_clone$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tests_test_value_clone_OBJECTS) $(tests_test_value_clone_LDADD) $(LIBS)
tests/test_value_copy_char.$(OBJEXT): tests/$(am__dirstamp) \
	tests/$(DEPDIR)/$(am__dirstamp)

tests/test_value_copy_char$(EXEEXT): $(tests_test_value_copy_char_OBJECTS) $(tests_test_value_copy_char_DEPENDENCIES) $(EXTRA_tests_test_value_copy_char_DEPENDENCIES) tests/$(am__dirstamp)
	@rm -f tests/test_value_copy_char$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tests_test_value_copy_char_OBJECTS) $(tests_test_value_copy_char_LDADD) $(LIBS)
tests/test_value_create.$(OBJEXT): tests/$(am__dirstamp) \
	tests/$(DEPDIR)/$(am__dirstamp)

tests/test_value_create$(EXEEXT): $(tests_test_value_create_OBJECTS) $(tests_test_value_create_DEPENDENCIES) $(EXTRA_tests_test_value_create_DEPENDENCIES) tests/$(am__dirstamp)
	@rm -f tests/test_value_create$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tests_test_value_create_OBJECTS) $(tests_test_value_create_LDADD) $(LIBS)
tests/test_value_get_number.$(OBJEXT): tests/$(am__dirstamp) \
	tests/$(DEPDIR)/$(am__dirstamp)

tests/test_value_get_number$(EXEEXT): $(tests_test_value_get_number_OBJECTS) $(tests_test_value_get_number_DEPENDENCIES) $(EXTRA_tests_test_value_get_number_DEPENDENCIES) tests/$(am__dirstamp)
	@rm -f tests/test_value_get_number$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tests_test_value_get_number_OBJECTS) $(tests_test_value_get_number_LDADD) $(LIBS)
tests/test_value_init_char.$(OBJEXT): tests/$(am__dirstamp) \
	tests/$(DEPDIR)/$(am__dirstamp)

tests/test_value_init_char$(EXEEXT): $(tests_test_value_init_char_OBJECTS) $(tests_test_value_init_char_DEPENDENCIES) $(EXTRA_tests_test_value_init_char_DEPENDENCIES) tests/$(am__dirstamp)
	@rm -f tests/test_value_init_char$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tests_test_value_init_char_OBJECTS) $(tests_test_value_init_char_LDADD) $(LIBS)
tests/test_value_init_numb.$(OBJEXT): tests/$(am__dirstamp) \
	tests/$(DEPDIR)/$(am__dirstamp)

tests/test_value_init_numb$(EXEEXT): $(tests_test_value_init_numb_OBJECTS) $(tests_test_value_init_numb_DEPENDENCIES) $(EXTRA_tests_test_value_init_numb_DEPENDENCIES) tests/$(am__dirstamp)
	@rm -f tests/test_value_init_numb$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tests_test_value_init_numb_OBJECTS) $(tests_test_value_init_numb_LDADD) $(LIBS)
tests/test_value_parse_numb.$(OBJEXT): tests/$(am__dirstamp) \
	tests/$(DEPDIR)/$(am__dirstamp)

tests/test_value_parse_numb$(EXEEXT): $(tests_test_value_parse_numb_OBJECTS) $(tests_test_value_parse_numb_DEPENDENCIES) $(EXTRA_tests_test_value_parse_numb_DEPENDENCIES) tests/$(am__dirstamp)
	@rm -f tests/test_value_parse_numb$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tests_test_value_parse_numb_OBJECTS) $(tests_test_value_parse_numb_LDADD) $(LIBS)
tests/test_value_set_quoted.$(OBJEXT): tests/$(am__dirstamp) \
	tests/$(DEPDIR)/$(am__dirstamp)

tests/test_value_set_quoted$(EXEEXT): $(tests_test_value_set_quoted_OBJECTS) $(tests_test_value_set_quoted_DEPENDENCIES) $(EXTRA_tests_test_value_set_quoted_DEPENDENCIES) tests/$(am__dirstamp)
	@rm -f tests/test_value_set_quoted$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tests_test_value_set_quoted_OBJECTS) $(tests_test_value_set_quoted_LDADD) $(LIBS)
tests/test_value_try_quoted.$(OBJEXT): tests/$(am__dirstamp) \
	tests/$(DEPDIR)/$(am__dirstamp)

tests/test_value_try_quoted$(EXEEXT): $(tests_test_value_try_quoted_OBJECTS) $(tests_test_value_try_quoted_DEPENDENCIES) $(EXTRA_tests_test_value_try_quoted_DEPENDENCIES) tests/$(am__dirstamp)
	@rm -f tests/test_value_try_quoted$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tests_test_value_try_quoted_OBJECTS) $(tests_test_value_try_quoted_LDADD) $(LIBS)
tests/test_write_11.$(OBJEXT): tests/$(am__dirstamp) \
	tests/$(DEPDIR)/$(am__dirstamp)

tests/test_write_11$(EXEEXT): $(tests_test_write_11_OBJECTS) $(tests_test_write_11_DEPENDENCIES) $(EXTRA_tests_test_write_11_DEPENDENCIES) tests/$(am__dirstamp)
	@rm -f tests/test_write_11$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tests_test_write_11_OBJECTS) $(tests_test_write_11_LDADD) $(LIBS)
tests/test_write_complex.$(OBJEXT): tests/$(am__dirstamp) \
	tests/$(DEPDIR)/$(am__dirstamp)

tests/test_write_complex$(EXEEXT): $(tests_test_write_complex_OBJECTS) $(tests_test_write_complex_DEPENDENCIES) $(EXTRA_tests_test_write_complex_DEPENDENCIES) tests/$(am__dirstamp)
	@rm -f tests/test_write_complex$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tests_test_write_complex_OBJECTS) $(tests_test_write_complex_LDADD) $(LIBS)
tests/test_write_frames.$(OBJEXT): tests/$(am__dirstamp) \
	tests/$(DEPDIR)/$(am__dirstamp)

tests/test_write_frames$(EXEEXT): $(tests_test_write_frames_OBJECTS) $(tests_test_write_frames_DEPENDENCIES) $(EXTRA_tests_test_write_frames_DEPENDENCIES) tests/$(am__dirstamp)
	@rm -f tests/test_write_frames$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tests_test_write_frames_OBJECTS) $(tests_test_write_frames_LDADD) $(LIBS)
tests/test_write_loops.$(OBJEXT): tests/$(am__dirstamp) \
	tests/$(DEPDIR)/$(am__dirstamp)

tests/test_write_loops$(EXEEXT): $(tests_test_write_loops_OBJECTS) $(tests_test_write_loops_DEPENDENCIES) $(EXTRA_tests_test_write_loops_DEPENDENCIES) tests/$(am__dirstamp)
	@rm -f tests/test_write_loops$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tests_test_write_loops_OBJECTS) $(tests_test_write_loops_LDADD) $(LIBS)
tests/test_write_simple.$(OBJEXT): tests/$(am__dirstamp) \
	tests/$(DEPDIR)/$(am__dirstamp)

tests/test_write_simple$(EXEEXT): $(tests_test_write_simple_OBJECTS) $(tests_test_write_simple_DEPENDENCIES) $(EXTRA_tests_test_write_simple_DEPENDENCIES) tests/$(am__dirstamp)
	@rm -f tests/test_write_simple$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tests_test_write_simple_OBJECTS) $(tests_test_write_simple_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)
	-rm -f examples/*.$(OBJEXT)
	-rm -f tests/*.$(OBJEXT)
	-rm -f tools/*.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/cif.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ciffile.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/container.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/loop.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/map.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/packet.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/parser.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/pktitr.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/utils.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/value.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@examples/$(DEPDIR)/addauthor.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@examples/$(DEPDIR)/syncheck.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@examples/$(DEPDIR)/table1.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@examples/$(DEPDIR)/table3.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@tests/$(DEPDIR)/test_analyze_string.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@tests/$(DEPDIR)/test_block_create_frame1.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@tests/$(DEPDIR)/test_block_create_frame2.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@tests/$(DEPDIR)/test_block_get_all_frames.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@tests/$(DEPDIR)/test_block_get_frame.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@tests/$(DEPDIR)/test_container_assert_block.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@tests/$(DEPDIR)/test_container_create_loop1.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@tests/$(DEPDIR)/test_container_create_loop2.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@tests/$(DEPDIR)/test_container_get_all_loops.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@tests/$(DEPDIR)/test_container_get_category_loop.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@tests/$(DEPDIR)/test_container_get_code.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@tests/$(DEPDIR)/test_container_get_item_loop.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@tests/$(DEPDIR)/test_container_get_value.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@tests/$(DEPDIR)/test_container_prune.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@tests/$(DEPDIR)/test_container_remove_item.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@tests/$(DEPDIR)/test_container_set_value1.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@tests/$(DEPDIR)/test_container_set_value2.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@tests/$(DEPDIR)/test_create.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@tests/$(DEPDIR)/test_create_block1.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@tests/$(DEPDIR)/test_create_block2.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@tests/$(DEPDIR)/test_get_all_blocks.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@tests/$(DEPDIR)/test_get_api_version.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@tests/$(DEPDIR)/test_get_block.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@tests/$(DEPDIR)/test_list_elements.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@tests/$(DEPDIR)/test_loop_add_item.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@tests/$(DEPDIR)/test_loop_destroy.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@tests/$(DEPDIR)/test_loop_get_names.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@tests/$(DEPDIR)/test_loop_misc.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@tests/$(DEPDIR)/test_loop_modification.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@tests/$(DEPDIR)/test_loop_packets.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@tests/$(DEPDIR)/test_loop_set_category.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@tests/$(DEPDIR)/test_multiple_cifs.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@tests/$(DEPDIR)/test_nested_frames.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@tests/$(DEPDIR)/test_nesting.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@tests/$(DEPDIR)/test_normalize.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@tests/$(DEPDIR)/test_packet_create.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@tests/$(DEPDIR)/test_packet_items.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@tests/$(DEPDIR)/test_packet_remove_item.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@tests/$(DEPDIR)/test_packet_set_item.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@tests/$(DEPDIR)/test_parse_10.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@tests/$(DEPDIR)/test_parse_cif11_unquoted.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@tests/$(DEPDIR)/test_parse_cif1_invalid.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@tests/$(DEPDIR)/test_parse_cif1_quoting.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@tests/$(DEPDIR)/test_parse_complex_data.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@tests/$(DEPDIR)/test_parse_containernames.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@tests/$(DEPDIR)/test_parse_core.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@tests/$(DEPDIR)/test_parse_list_data.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@tests/$(DEPDIR)/test_parse_minimal.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@tests/$(DEPDIR)/test_parse_nested.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@tests/$(DEPDIR)/test_parse_simple_containers.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@tests/$(DEPDIR)/test_parse_simple_data.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@tests/$(DEPDIR)/test_parse_simple_loops.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@tests/$(DEPDIR)/test_parse_table_data.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@tests/$(DEPDIR)/test_parse_text_fields.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@tests/$(DEPDIR)/test_parse_triple.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@tests/$(DEPDIR)/test_parse_unicode.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@tests/$(DEPDIR)/test_table_elements.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@tests/$(DEPDIR)/test_ustrdup.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@tests/$(DEPDIR)/test_value_autoinit_numb.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@tests/$(DEPDIR)/test_value_clone.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@tests/$(DEPDIR)/test_value_copy_char.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@tests/$(DEPDIR)/test_value_create.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@tests/$(DEPDIR)/test_value_get_number.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@tests/$(DEPDIR)/test_value_init_char.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@tests/$(DEPDIR)/test_value_init_numb.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@tests/$(DEPDIR)/test_value_parse_numb.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@tests/$(DEPDIR)/test_value_set_quoted.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@tests/$(DEPDIR)/test_value_try_quoted.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@tests/$(DEPDIR)/test_write_11.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@tests/$(DEPDIR)/test_write_complex.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@tests/$(DEPDIR)/test_write_frames.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@tests/$(DEPDIR)/test_write_loops.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@tests/$(DEPDIR)/test_write_simple.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@tools/$(DEPDIR)/linguist.Po@am__quote@ # am--include-marker

$(am__depfiles_remade):
	@$(MKDIR_P) $(@D)
	@echo '# dummy' >$@-t && $(am__mv) $@-t $@

am--depfiles: $(am__depfiles_remade)

.c.o:
@am__fastdepCC_TRUE@	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.o$$||'`;\
@am__fastdepCC_TRUE@	$(COMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
@am__fastdepCC_TRUE@	$(am__mv) $$depbase.Tpo $$depbase.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(COMPILE) -c -o $@ $<

.c.obj:
@am__fastdepCC_TRUE@	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.obj$$||'`;\
@am__fastdepCC_TRUE@	$(COMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ `$(CYGPATH_W) '$<'` &&\
@am__fastdepCC_TRUE@	$(am__mv) $$depbase.Tpo $$depbase.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(COMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.c.lo:
@am__fastdepCC_TRUE@	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.lo$$||'`;\
@am__fastdepCC_TRUE@	$(LTCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
@am__fastdepCC_TRUE@	$(am__mv) $$depbase.Tpo $$depbase.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LTCOMPILE) -c -o $@ $<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs
	-rm -rf tests/.libs tests/_libs
install-includeHEADERS: $(include_HEADERS)
	@$(NORMAL_INSTALL)
	@list='$(include_HEADERS)'; test -n "$(includedir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(includedir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(includedir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_HEADER) $$files '$(DESTDIR)$(includedir)'"; \
	  $(INSTALL_HEADER) $$files "$(DESTDIR)$(includedir)" || exit $$?; \
	done

uninstall-includeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(include_HEADERS)'; test -n "$(includedir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(includedir)'; $(am__uninstall_files_from_dir)

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-am
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-am

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscopelist: cscopelist-am

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

# Recover from deleted '.trs' file; this should ensure that
# "rm -f foo.log; make foo.trs" re-run 'foo.test', and re-create
# both 'foo.log' and 'foo.trs'.  Break the recipe in two subshells
# to avoid problems with "make -n".
.log.trs:
	rm -f $< $@
	$(MAKE) $(AM_MAKEFLAGS) $<

# Leading 'am--fnord' is there to ensure the list of targets does not
# expand to empty, as could happen e.g. with make check TESTS=''.
am--fnord $(TEST_LOGS) $(TEST_LOGS:.log=.trs): $(am__force_recheck)
am--force-recheck:
	@:

$(TEST_SUITE_LOG): $(TEST_LOGS)
	@$(am__set_TESTS_bases); \
	am__f_ok () { test -f "$$1" && test -r "$$1"; }; \
	redo_bases=`for i in $$bases; do \
	              am__f_ok $$i.trs && am__f_ok $$i.log || echo $$i; \
	            done`; \
	if test -n "$$redo_bases"; then \
	  redo_logs=`for i in $$redo_bases; do echo $$i.log; done`; \
	  redo_results=`for i in $$redo_bases; do echo $$i.trs; done`; \
	  if $(am__make_dryrun); then :; else \
	    rm -f $$redo_logs && rm -f $$redo_results || exit 1; \
	  fi; \
	fi; \
	if test -n "$$am__remaking_logs"; then \
	  echo "fatal: making $(TEST_SUITE_LOG): possible infinite" \
	       "recursion detected" >&2; \
	elif test -n "$$redo_logs"; then \
	  am__remaking_logs=yes $(MAKE) $(AM_MAKEFLAGS) $$redo_logs; \
	fi; \
	if $(am__make_dryrun); then :; else \
	  st=0;  \
	  errmsg="fatal: making $(TEST_SUITE_LOG): failed to create"; \
	  for i in $$redo_bases; do \
	    test -f $$i.trs && test -r $$i.trs \
	      || { echo "$$errmsg $$i.trs" >&2; st=1; }; \
	    test -f $$i.log && test -r $$i.log \
	      || { echo "$$errmsg $$i.log" >&2; st=1; }; \
	  done; \
	  test $$st -eq 0 || exit 1; \
	fi
	@$(am__sh_e_setup); $(am__tty_colors); $(am__set_TESTS_bases); \
	ws='[ 	]'; \
	results=`for b in $$bases; do echo $$b.trs; done`; \
	test -n "$$results" || results=/dev/null; \
	all=`  grep "^$$ws*:test-result:"           $$results | wc -l`; \
	pass=` grep "^$$ws*:test-result:$$ws*PASS"  $$results | wc -l`; \
	fail=` grep "^$$ws*:test-result:$$ws*FAIL"  $$results | wc -l`; \
	skip=` grep "^$$ws*:test-result:$$ws*SKIP"  $$results | wc -l`; \
	xfail=`grep "^$$ws*:test-result:$$ws*XFAIL" $$results | wc -l`; \
	xpass=`grep "^$$ws*:test-result:$$ws*XPASS" $$results | wc -l`; \
	error=`grep "^$$ws*:test-result:$$ws*ERROR" $$results | wc -l`; \
	if test `expr $$fail + $$xpass + $$error` -eq 0; then \
	  success=true; \
	else \
	  success=false; \
	fi; \
	br='==================='; br=$$br$$br$$br$$br; \
	result_count () \
	{ \
	    if test x"$$1" = x"--maybe-color"; then \
	      maybe_colorize=yes; \
	    elif test x"$$1" = x"--no-color"; then \
	      maybe_colorize=no; \
	    else \
	      echo "$@: invalid 'result_count' usage" >&2; exit 4; \
	    fi; \
	    shift; \
	    desc=$$1 count=$$2; \
	    if test $$maybe_colorize = yes && test $$count -gt 0; then \
	      color_start=$$3 color_end=$$std; \
	    else \
	      color_start= color_end=; \
	    fi; \
	    echo "$${color_start}# $$desc $$count$${color_end}"; \
	}; \
	create_testsuite_report () \
	{ \
	  result_count $$1 "TOTAL:" $$all   "$$brg"; \
	  result_count $$1 "PASS: " $$pass  "$$grn"; \
	  result_count $$1 "SKIP: " $$skip  "$$blu"; \
	  result_count $$1 "XFAIL:" $$xfail "$$lgn"; \
	  result_count $$1 "FAIL: " $$fail  "$$red"; \
	  result_count $$1 "XPASS:" $$xpass "$$red"; \
	  result_count $$1 "ERROR:" $$error "$$mgn"; \
	}; \
	{								\
	  echo "$(PACKAGE_STRING): $(subdir)/$(TEST_SUITE_LOG)" |	\
	    $(am__rst_title);						\
	  create_testsuite_report --no-color;				\
	  echo;								\
	  echo ".. contents:: :depth: 2";				\
	  echo;								\
	  for b in $$bases; do echo $$b; done				\
	    | $(am__create_global_log);					\
	} >$(TEST_SUITE_LOG).tmp || exit 1;				\
	mv $(TEST_SUITE_LOG).tmp $(TEST_SUITE_LOG);			\
	if $$success; then						\
	  col="$$grn";							\
	 else								\
	  col="$$red";							\
	  test x"$$VERBOSE" = x || cat $(TEST_SUITE_LOG);		\
	fi;								\
	echo "$${col}$$br$${std}"; 					\
	echo "$${col}Testsuite summary for $(PACKAGE_STRING)$${std}";	\
	echo "$${col}$$br$${std}"; 					\
	create_testsuite_report --maybe-color;				\
	echo "$$col$$br$$std";						\
	if $$success; then :; else					\
	  echo "$${col}See $(subdir)/$(TEST_SUITE_LOG)$${std}";		\
	  if test -n "$(PACKAGE_BUGREPORT)"; then			\
	    echo "$${col}Please report to $(PACKAGE_BUGREPORT)$${std}";	\
	  fi;								\
	  echo "$$col$$br$$std";					\
	fi;								\
	$$success || exit 1

check-TESTS: $(check_PROGRAMS)
	@list='$(RECHECK_LOGS)';           test -z "$$list" || rm -f $$list
	@list='$(RECHECK_LOGS:.log=.trs)'; test -z "$$list" || rm -f $$list
	@test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)
	@set +e; $(am__set_TESTS_bases); \
	log_list=`for i in $$bases; do echo $$i.log; done`; \
	trs_list=`for i in $$bases; do echo $$i.trs; done`; \
	log_list=`echo $$log_list`; trs_list=`echo $$trs_list`; \
	$(MAKE) $(AM_MAKEFLAGS) $(TEST_SUITE_LOG) TEST_LOGS="$$log_list"; \
	exit $$?;
recheck: all $(check_PROGRAMS)
	@test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)
	@set +e; $(am__set_TESTS_bases); \
	bases=`for i in $$bases; do echo $$i; done \
	         | $(am__list_recheck_tests)` || exit 1; \
	log_list=`for i in $$bases; do echo $$i.log; done`; \
	log_list=`echo $$log_list`; \
	$(MAKE) $(AM_MAKEFLAGS) $(TEST_SUITE_LOG) \
	        am__force_recheck=am--force-recheck \
	        TEST_LOGS="$$log_list"; \
	exit $$?
tests/test_get_api_version.log: tests/test_get_api_version$(EXEEXT)
	@p='tests/test_get_api_version$(EXEEXT)'; \
	b='tests/test_get_api_version'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/test_create.log: tests/test_create$(EXEEXT)
	@p='tests/test_create$(EXEEXT)'; \
	b='tests/test_create'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/test_create_block1.log: tests/test_create_block1$(EXEEXT)
	@p='tests/test_create_block1$(EXEEXT)'; \
	b='tests/test_create_block1'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/test_create_block2.log: tests/test_create_block2$(EXEEXT)
	@p='tests/test_create_block2$(EXEEXT)'; \
	b='tests/test_create_block2'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/test_get_block.log: tests/test_get_block$(EXEEXT)
	@p='tests/test_get_block$(EXEEXT)'; \
	b='tests/test_get_block'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/test_get_all_blocks.log: tests/test_get_all_blocks$(EXEEXT)
	@p='tests/test_get_all_blocks$(EXEEXT)'; \
	b='tests/test_get_all_blocks'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/test_multiple_cifs.log: tests/test_multiple_cifs$(EXEEXT)
	@p='tests/test_multiple_cifs$(EXEEXT)'; \
	b='tests/test_multiple_cifs'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/test_block_create_frame1.log: tests/test_block_create_frame1$(EXEEXT)
	@p='tests/test_block_create_frame1$(EXEEXT)'; \
	b='tests/test_block_create_frame1'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/test_block_create_frame2.log: tests/test_block_create_frame2$(EXEEXT)
	@p='tests/test_block_create_frame2$(EXEEXT)'; \
	b='tests/test_block_create_frame2'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/test_block_get_frame.log: tests/test_block_get_frame$(EXEEXT)
	@p='tests/test_block_get_frame$(EXEEXT)'; \
	b='tests/test_block_get_frame'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/test_block_get_all_frames.log: tests/test_block_get_all_frames$(EXEEXT)
	@p='tests/test_block_get_all_frames$(EXEEXT)'; \
	b='tests/test_block_get_all_frames'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/test_container_create_loop1.log: tests/test_container_create_loop1$(EXEEXT)
	@p='tests/test_container_create_loop1$(EXEEXT)'; \
	b='tests/test_container_create_loop1'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/test_container_create_loop2.log: tests/test_container_create_loop2$(EXEEXT)
	@p='tests/test_container_create_loop2$(EXEEXT)'; \
	b='tests/test_container_create_loop2'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/test_container_get_category_loop.log: tests/test_container_get_category_loop$(EXEEXT)
	@p='tests/test_container_get_category_loop$(EXEEXT)'; \
	b='tests/test_container_get_category_loop'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/test_container_get_item_loop.log: tests/test_container_get_item_loop$(EXEEXT)
	@p='tests/test_container_get_item_loop$(EXEEXT)'; \
	b='tests/test_container_get_item_loop'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/test_container_get_all_loops.log: tests/test_container_get_all_loops$(EXEEXT)
	@p='tests/test_container_get_all_loops$(EXEEXT)'; \
	b='tests/test_container_get_all_loops'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/test_container_get_code.log: tests/test_container_get_code$(EXEEXT)
	@p='tests/test_container_get_code$(EXEEXT)'; \
	b='tests/test_container_get_code'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/test_nested_frames.log: tests/test_nested_frames$(EXEEXT)
	@p='tests/test_nested_frames$(EXEEXT)'; \
	b='tests/test_nested_frames'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/test_loop_get_names.log: tests/test_loop_get_names$(EXEEXT)
	@p='tests/test_loop_get_names$(EXEEXT)'; \
	b='tests/test_loop_get_names'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/test_value_create.log: tests/test_value_create$(EXEEXT)
	@p='tests/test_value_create$(EXEEXT)'; \
	b='tests/test_value_create'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/test_value_get_number.log: tests/test_value_get_number$(EXEEXT)
	@p='tests/test_value_get_number$(EXEEXT)'; \
	b='tests/test_value_get_number'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/test_value_init_char.log: tests/test_value_init_char$(EXEEXT)
	@p='tests/test_value_init_char$(EXEEXT)'; \
	b='tests/test_value_init_char'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/test_value_copy_char.log: tests/test_value_copy_char$(EXEEXT)
	@p='tests/test_value_copy_char$(EXEEXT)'; \
	b='tests/test_value_copy_char'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/test_value_init_numb.log: tests/test_value_init_numb$(EXEEXT)
	@p='tests/test_value_init_numb$(EXEEXT)'; \
	b='tests/test_value_init_numb'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/test_value_autoinit_numb.log: tests/test_value_autoinit_numb$(EXEEXT)
	@p='tests/test_value_autoinit_numb$(EXEEXT)'; \
	b='tests/test_value_autoinit_numb'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/test_value_parse_numb.log: tests/test_value_parse_numb$(EXEEXT)
	@p='tests/test_value_parse_numb$(EXEEXT)'; \
	b='tests/test_value_parse_numb'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/test_list_elements.log: tests/test_list_elements$(EXEEXT)
	@p='tests/test_list_elements$(EXEEXT)'; \
	b='tests/test_list_elements'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/test_table_elements.log: tests/test_table_elements$(EXEEXT)
	@p='tests/test_table_elements$(EXEEXT)'; \
	b='tests/test_table_elements'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/test_value_clone.log: tests/test_value_clone$(EXEEXT)
	@p='tests/test_value_clone$(EXEEXT)'; \
	b='tests/test_value_clone'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/test_packet_create.log: tests/test_packet_create$(EXEEXT)
	@p='tests/test_packet_create$(EXEEXT)'; \
	b='tests/test_packet_create'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/test_packet_set_item.log: tests/test_packet_set_item$(EXEEXT)
	@p='tests/test_packet_set_item$(EXEEXT)'; \
	b='tests/test_packet_set_item'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/test_packet_remove_item.log: tests/test_packet_remove_item$(EXEEXT)
	@p='tests/test_packet_remove_item$(EXEEXT)'; \
	b='tests/test_packet_remove_item'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/test_container_set_value1.log: tests/test_container_set_value1$(EXEEXT)
	@p='tests/test_container_set_value1$(EXEEXT)'; \
	b='tests/test_container_set_value1'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/test_container_set_value2.log: tests/test_container_set_value2$(EXEEXT)
	@p='tests/test_container_set_value2$(EXEEXT)'; \
	b='tests/test_container_set_value2'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/test_container_get_value.log: tests/test_container_get_value$(EXEEXT)
	@p='tests/test_container_get_value$(EXEEXT)'; \
	b='tests/test_container_get_value'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/test_packet_items.log: tests/test_packet_items$(EXEEXT)
	@p='tests/test_packet_items$(EXEEXT)'; \
	b='tests/test_packet_items'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/test_loop_packets.log: tests/test_loop_packets$(EXEEXT)
	@p='tests/test_loop_packets$(EXEEXT)'; \
	b='tests/test_loop_packets'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/test_loop_modification.log: tests/test_loop_modification$(EXEEXT)
	@p='tests/test_loop_modification$(EXEEXT)'; \
	b='tests/test_loop_modification'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/test_loop_set_category.log: tests/test_loop_set_category$(EXEEXT)
	@p='tests/test_loop_set_category$(EXEEXT)'; \
	b='tests/test_loop_set_category'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/test_loop_destroy.log: tests/test_loop_destroy$(EXEEXT)
	@p='tests/test_loop_destroy$(EXEEXT)'; \
	b='tests/test_loop_destroy'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/test_loop_add_item.log: tests/test_loop_add_item$(EXEEXT)
	@p='tests/test_loop_add_item$(EXEEXT)'; \
	b='tests/test_loop_add_item'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/test_container_remove_item.log: tests/test_container_remove_item$(EXEEXT)
	@p='tests/test_container_remove_item$(EXEEXT)'; \
	b='tests/test_container_remove_item'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/test_loop_misc.log: tests/test_loop_misc$(EXEEXT)
	@p='tests/test_loop_misc$(EXEEXT)'; \
	b='tests/test_loop_misc'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/test_nesting.log: tests/test_nesting$(EXEEXT)
	@p='tests/test_nesting$(EXEEXT)'; \
	b='tests/test_nesting'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/test_container_assert_block.log: tests/test_container_assert_block$(EXEEXT)
	@p='tests/test_container_assert_block$(EXEEXT)'; \
	b='tests/test_container_assert_block'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/test_ustrdup.log: tests/test_ustrdup$(EXEEXT)
	@p='tests/test_ustrdup$(EXEEXT)'; \
	b='tests/test_ustrdup'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/test_normalize.log: tests/test_normalize$(EXEEXT)
	@p='tests/test_normalize$(EXEEXT)'; \
	b='tests/test_normalize'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/test_analyze_string.log: tests/test_analyze_string$(EXEEXT)
	@p='tests/test_analyze_string$(EXEEXT)'; \
	b='tests/test_analyze_string'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/test_container_prune.log: tests/test_container_prune$(EXEEXT)
	@p='tests/test_container_prune$(EXEEXT)'; \
	b='tests/test_container_prune'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/test_parse_10.log: tests/test_parse_10$(EXEEXT)
	@p='tests/test_parse_10$(EXEEXT)'; \
	b='tests/test_parse_10'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/test_parse_simple_data.log: tests/test_parse_simple_data$(EXEEXT)
	@p='tests/test_parse_simple_data$(EXEEXT)'; \
	b='tests/test_parse_simple_data'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/test_parse_list_data.log: tests/test_parse_list_data$(EXEEXT)
	@p='tests/test_parse_list_data$(EXEEXT)'; \
	b='tests/test_parse_list_data'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/test_parse_table_data.log: tests/test_parse_table_data$(EXEEXT)
	@p='tests/test_parse_table_data$(EXEEXT)'; \
	b='tests/test_parse_table_data'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/test_parse_complex_data.log: tests/test_parse_complex_data$(EXEEXT)
	@p='tests/test_parse_complex_data$(EXEEXT)'; \
	b='tests/test_parse_complex_data'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/test_parse_simple_containers.log: tests/test_parse_simple_containers$(EXEEXT)
	@p='tests/test_parse_simple_containers$(EXEEXT)'; \
	b='tests/test_parse_simple_containers'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/test_parse_simple_loops.log: tests/test_parse_simple_loops$(EXEEXT)
	@p='tests/test_parse_simple_loops$(EXEEXT)'; \
	b='tests/test_parse_simple_loops'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/test_parse_cif1_quoting.log: tests/test_parse_cif1_quoting$(EXEEXT)
	@p='tests/test_parse_cif1_quoting$(EXEEXT)'; \
	b='tests/test_parse_cif1_quoting'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/test_parse_cif1_invalid.log: tests/test_parse_cif1_invalid$(EXEEXT)
	@p='tests/test_parse_cif1_invalid$(EXEEXT)'; \
	b='tests/test_parse_cif1_invalid'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/test_parse_containernames.log: tests/test_parse_containernames$(EXEEXT)
	@p='tests/test_parse_containernames$(EXEEXT)'; \
	b='tests/test_parse_containernames'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/test_parse_unicode.log: tests/test_parse_unicode$(EXEEXT)
	@p='tests/test_parse_unicode$(EXEEXT)'; \
	b='tests/test_parse_unicode'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/test_parse_text_fields.log: tests/test_parse_text_fields$(EXEEXT)
	@p='tests/test_parse_text_fields$(EXEEXT)'; \
	b='tests/test_parse_text_fields'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/test_parse_minimal.log: tests/test_parse_minimal$(EXEEXT)
	@p='tests/test_parse_minimal$(EXEEXT)'; \
	b='tests/test_parse_minimal'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/test_parse_triple.log: tests/test_parse_triple$(EXEEXT)
	@p='tests/test_parse_triple$(EXEEXT)'; \
	b='tests/test_parse_triple'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/test_parse_nested.log: tests/test_parse_nested$(EXEEXT)
	@p='tests/test_parse_nested$(EXEEXT)'; \
	b='tests/test_parse_nested'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/test_parse_core.log: tests/test_parse_core$(EXEEXT)
	@p='tests/test_parse_core$(EXEEXT)'; \
	b='tests/test_parse_core'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/test_write_simple.log: tests/test_write_simple$(EXEEXT)
	@p='tests/test_write_simple$(EXEEXT)'; \
	b='tests/test_write_simple'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/test_write_complex.log: tests/test_write_complex$(EXEEXT)
	@p='tests/test_write_complex$(EXEEXT)'; \
	b='tests/test_write_complex'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/test_write_loops.log: tests/test_write_loops$(EXEEXT)
	@p='tests/test_write_loops$(EXEEXT)'; \
	b='tests/test_write_loops'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/test_write_frames.log: tests/test_write_frames$(EXEEXT)
	@p='tests/test_write_frames$(EXEEXT)'; \
	b='tests/test_write_frames'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/test_write_11.log: tests/test_write_11$(EXEEXT)
	@p='tests/test_write_11$(EXEEXT)'; \
	b='tests/test_write_11'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/test_value_set_quoted.log: tests/test_value_set_quoted$(EXEEXT)
	@p='tests/test_value_set_quoted$(EXEEXT)'; \
	b='tests/test_value_set_quoted'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/test_value_try_quoted.log: tests/test_value_try_quoted$(EXEEXT)
	@p='tests/test_value_try_quoted$(EXEEXT)'; \
	b='tests/test_value_try_quoted'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/test_parse_cif11_unquoted.log: tests/test_parse_cif11_unquoted$(EXEEXT)
	@p='tests/test_parse_cif11_unquoted$(EXEEXT)'; \
	b='tests/test_parse_cif11_unquoted'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
.test.log:
	@p='$<'; \
	$(am__set_b); \
	$(am__check_pre) $(TEST_LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_TEST_LOG_DRIVER_FLAGS) $(TEST_LOG_DRIVER_FLAGS) -- $(TEST_LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
@am__EXEEXT_TRUE@.test$(EXEEXT).log:
@am__EXEEXT_TRUE@	@p='$<'; \
@am__EXEEXT_TRUE@	$(am__set_b); \
@am__EXEEXT_TRUE@	$(am__check_pre) $(TEST_LOG_DRIVER) --test-name "$$f" \
@am__EXEEXT_TRUE@	--log-file $$b.log --trs-file $$b.trs \
@am__EXEEXT_TRUE@	$(am__common_driver_flags) $(AM_TEST_LOG_DRIVER_FLAGS) $(TEST_LOG_DRIVER_FLAGS) -- $(TEST_LOG_COMPILE) \
@am__EXEEXT_TRUE@	"$$tst" $(AM_TESTS_FD_REDIRECT)

distdir: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) distdir-am

distdir-am: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) $(check_PROGRAMS)
	$(MAKE) $(AM_MAKEFLAGS) check-TESTS
check: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) check-am
all-am: Makefile $(PROGRAMS) $(LTLIBRARIES) $(HEADERS)
install-binPROGRAMS: install-libLTLIBRARIES

installdirs:
	for dir in "$(DESTDIR)$(bindir)" "$(DESTDIR)$(libdir)" "$(DESTDIR)$(includedir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:
	-test -z "$(TEST_LOGS)" || rm -f $(TEST_LOGS)
	-test -z "$(TEST_LOGS:.log=.trs)" || rm -f $(TEST_LOGS:.log=.trs)
	-test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)
	-rm -f examples/$(DEPDIR)/$(am__dirstamp)
	-rm -f examples/$(am__dirstamp)
	-rm -f tests/$(DEPDIR)/$(am__dirstamp)
	-rm -f tests/$(am__dirstamp)
	-rm -f tools/$(DEPDIR)/$(am__dirstamp)
	-rm -f tools/$(am__dirstamp)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
	-test -z "$(BUILT_SOURCES)" || rm -f $(BUILT_SOURCES)
	-test -z "$(MAINTAINERCLEANFILES)" || rm -f $(MAINTAINERCLEANFILES)
clean: clean-am

clean-am: clean-binPROGRAMS clean-checkPROGRAMS clean-generic \
	clean-libLTLIBRARIES clean-libtool mostlyclean-am

distclean: distclean-am
		-rm -f ./$(DEPDIR)/cif.Plo
	-rm -f ./$(DEPDIR)/ciffile.Plo
	-rm -f ./$(DEPDIR)/container.Plo
	-rm -f ./$(DEPDIR)/loop.Plo
	-rm -f ./$(DEPDIR)/map.Plo
	-rm -f ./$(DEPDIR)/packet.Plo
	-rm -f ./$(DEPDIR)/parser.Plo
	-rm -f ./$(DEPDIR)/pktitr.Plo
	-rm -f ./$(DEPDIR)/utils.Plo
	-rm -f ./$(DEPDIR)/value.Plo
	-rm -f examples/$(DEPDIR)/addauthor.Po
	-rm -f examples/$(DEPDIR)/syncheck.Po
	-rm -f examples/$(DEPDIR)/table1.Po
	-rm -f examples/$(DEPDIR)/table3.Po
	-rm -f tests/$(DEPDIR)/test_analyze_string.Po
	-rm -f tests/$(DEPDIR)/test_block_create_frame1.Po
	-rm -f tests/$(DEPDIR)/test_block_create_frame2.Po
	-rm -f tests/$(DEPDIR)/test_block_get_all_frames.Po
	-rm -f tests/$(DEPDIR)/test_block_get_frame.Po
	-rm -f tests/$(DEPDIR)/test_container_assert_block.Po
	-rm -f tests/$(DEPDIR)/test_container_create_loop1.Po
	-rm -f tests/$(DEPDIR)/test_container_create_loop2.Po
	-rm -f tests/$(DEPDIR)/test_container_get_all_loops.Po
	-rm -f tests/$(DEPDIR)/test_container_get_category_loop.Po
	-rm -f tests/$(DEPDIR)/test_container_get_code.Po
	-rm -f tests/$(DEPDIR)/test_container_get_item_loop.Po
	-rm -f tests/$(DEPDIR)/test_container_get_value.Po
	-rm -f tests/$(DEPDIR)/test_container_prune.Po
	-rm -f tests/$(DEPDIR)/test_container_remove_item.Po
	-rm -f tests/$(DEPDIR)/test_container_set_value1.Po
	-rm -f tests/$(DEPDIR)/test_container_set_value2.Po
	-rm -f tests/$(DEPDIR)/test_create.Po
	-rm -f tests/$(DEPDIR)/test_create_block1.Po
	-rm -f tests/$(DEPDIR)/test_create_block2.Po
	-rm -f tests/$(DEPDIR)/test_get_all_blocks.Po
	-rm -f tests/$(DEPDIR)/test_get_api_version.Po
	-rm -f tests/$(DEPDIR)/test_get_block.Po
	-rm -f tests/$(DEPDIR)/test_list_elements.Po
	-rm -f tests/$(DEPDIR)/test_loop_add_item.Po
	-rm -f tests/$(DEPDIR)/test_loop_destroy.Po
	-rm -f tests/$(DEPDIR)/test_loop_get_names.Po
	-rm -f tests/$(DEPDIR)/test_loop_misc.Po
	-rm -f tests/$(DEPDIR)/test_loop_modification.Po
	-rm -f tests/$(DEPDIR)/test_loop_packets.Po
	-rm -f tests/$(DEPDIR)/test_loop_set_category.Po
	-rm -f tests/$(DEPDIR)/test_multiple_cifs.Po
	-rm -f tests/$(DEPDIR)/test_nested_frames.Po
	-rm -f tests/$(DEPDIR)/test_nesting.Po
	-rm -f tests/$(DEPDIR)/test_normalize.Po
	-rm -f tests/$(DEPDIR)/test_packet_create.Po
	-rm -f tests/$(DEPDIR)/test_packet_items.Po
	-rm -f tests/$(DEPDIR)/test_packet_remove_item.Po
	-rm -f tests/$(DEPDIR)/test_packet_set_item.Po
	-rm -f tests/$(DEPDIR)/test_parse_10.Po
	-rm -f tests/$(DEPDIR)/test_parse_cif11_unquoted.Po
	-rm -f tests/$(DEPDIR)/test_parse_cif1_invalid.Po
	-rm -f tests/$(DEPDIR)/test_parse_cif1_quoting.Po
	-rm -f tests/$(DEPDIR)/test_parse_complex_data.Po
	-rm -f tests/$(DEPDIR)/test_parse_containernames.Po
	-rm -f tests/$(DEPDIR)/test_parse_core.Po
	-rm -f tests/$(DEPDIR)/test_parse_list_data.Po
	-rm -f tests/$(DEPDIR)/test_parse_minimal.Po
	-rm -f tests/$(DEPDIR)/test_parse_nested.Po
	-rm -f tests/$(DEPDIR)/test_parse_simple_containers.Po
	-rm -f tests/$(DEPDIR)/test_parse_simple_data.Po
	-rm -f tests/$(DEPDIR)/test_parse_simple_loops.Po
	-rm -f tests/$(DEPDIR)/test_parse_table_data.Po
	-rm -f tests/$(DEPDIR)/test_parse_text_fields.Po
	-rm -f tests/$(DEPDIR)/test_parse_triple.Po
	-rm -f tests/$(DEPDIR)/test_parse_unicode.Po
	-rm -f tests/$(DEPDIR)/test_table_elements.Po
	-rm -f tests/$(DEPDIR)/test_ustrdup.Po
	-rm -f tests/$(DEPDIR)/test_value_autoinit_numb.Po
	-rm -f tests/$(DEPDIR)/test_value_clone.Po
	-rm -f tests/$(DEPDIR)/test_value_copy_char.Po
	-rm -f tests/$(DEPDIR)/test_value_create.Po
	-rm -f tests/$(DEPDIR)/test_value_get_number.Po
	-rm -f tests/$(DEPDIR)/test_value_init_char.Po
	-rm -f tests/$(DEPDIR)/test_value_init_numb.Po
	-rm -f tests/$(DEPDIR)/test_value_parse_numb.Po
	-rm -f tests/$(DEPDIR)/test_value_set_quoted.Po
	-rm -f tests/$(DEPDIR)/test_value_try_quoted.Po
	-rm -f tests/$(DEPDIR)/test_write_11.Po
	-rm -f tests/$(DEPDIR)/test_write_complex.Po
	-rm -f tests/$(DEPDIR)/test_write_frames.Po
	-rm -f tests/$(DEPDIR)/test_write_loops.Po
	-rm -f tests/$(DEPDIR)/test_write_simple.Po
	-rm -f tools/$(DEPDIR)/linguist.Po
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am: install-includeHEADERS

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am: install-binPROGRAMS install-libLTLIBRARIES
	@$(NORMAL_INSTALL)
	$(MAKE) $(AM_MAKEFLAGS) install-exec-hook
install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
		-rm -f ./$(DEPDIR)/cif.Plo
	-rm -f ./$(DEPDIR)/ciffile.Plo
	-rm -f ./$(DEPDIR)/container.Plo
	-rm -f ./$(DEPDIR)/loop.Plo
	-rm -f ./$(DEPDIR)/map.Plo
	-rm -f ./$(DEPDIR)/packet.Plo
	-rm -f ./$(DEPDIR)/parser.Plo
	-rm -f ./$(DEPDIR)/pktitr.Plo
	-rm -f ./$(DEPDIR)/utils.Plo
	-rm -f ./$(DEPDIR)/value.Plo
	-rm -f examples/$(DEPDIR)/addauthor.Po
	-rm -f examples/$(DEPDIR)/syncheck.Po
	-rm -f examples/$(DEPDIR)/table1.Po
	-rm -f examples/$(DEPDIR)/table3.Po
	-rm -f tests/$(DEPDIR)/test_analyze_string.Po
	-rm -f tests/$(DEPDIR)/test_block_create_frame1.Po
	-rm -f tests/$(DEPDIR)/test_block_create_frame2.Po
	-rm -f tests/$(DEPDIR)/test_block_get_all_frames.Po
	-rm -f tests/$(DEPDIR)/test_block_get_frame.Po
	-rm -f tests/$(DEPDIR)/test_container_assert_block.Po
	-rm -f tests/$(DEPDIR)/test_container_create_loop1.Po
	-rm -f tests/$(DEPDIR)/test_container_create_loop2.Po
	-rm -f tests/$(DEPDIR)/test_container_get_all_loops.Po
	-rm -f tests/$(DEPDIR)/test_container_get_category_loop.Po
	-rm -f tests/$(DEPDIR)/test_container_get_code.Po
	-rm -f tests/$(DEPDIR)/test_container_get_item_loop.Po
	-rm -f tests/$(DEPDIR)/test_container_get_value.Po
	-rm -f tests/$(DEPDIR)/test_container_prune.Po
	-rm -f tests/$(DEPDIR)/test_container_remove_item.Po
	-rm -f tests/$(DEPDIR)/test_container_set_value1.Po
	-rm -f tests/$(DEPDIR)/test_container_set_value2.Po
	-rm -f tests/$(DEPDIR)/test_create.Po
	-rm -f tests/$(DEPDIR)/test_create_block1.Po
	-rm -f tests/$(DEPDIR)/test_create_block2.Po
	-rm -f tests/$(DEPDIR)/test_get_all_blocks.Po
	-rm -f tests/$(DEPDIR)/test_get_api_version.Po
	-rm -f tests/$(DEPDIR)/test_get_block.Po
	-rm -f tests/$(DEPDIR)/test_list_elements.Po
	-rm -f tests/$(DEPDIR)/test_loop_add_item.Po
	-rm -f tests/$(DEPDIR)/test_loop_destroy.Po
	-rm -f tests/$(DEPDIR)/test_loop_get_names.Po
	-rm -f tests/$(DEPDIR)/test_loop_misc.Po
	-rm -f tests/$(DEPDIR)/test_loop_modification.Po
	-rm -f tests/$(DEPDIR)/test_loop_packets.Po
	-rm -f tests/$(DEPDIR)/test_loop_set_category.Po
	-rm -f tests/$(DEPDIR)/test_multiple_cifs.Po
	-rm -f tests/$(DEPDIR)/test_nested_frames.Po
	-rm -f tests/$(DEPDIR)/test_nesting.Po
	-rm -f tests/$(DEPDIR)/test_normalize.Po
	-rm -f tests/$(DEPDIR)/test_packet_create.Po
	-rm -f tests/$(DEPDIR)/test_packet_items.Po
	-rm -f tests/$(DEPDIR)/test_packet_remove_item.Po
	-rm -f tests/$(DEPDIR)/test_packet_set_item.Po
	-rm -f tests/$(DEPDIR)/test_parse_10.Po
	-rm -f tests/$(DEPDIR)/test_parse_cif11_unquoted.Po
	-rm -f tests/$(DEPDIR)/test_parse_cif1_invalid.Po
	-rm -f tests/$(DEPDIR)/test_parse_cif1_quoting.Po
	-rm -f tests/$(DEPDIR)/test_parse_complex_data.Po
	-rm -f tests/$(DEPDIR)/test_parse_containernames.Po
	-rm -f tests/$(DEPDIR)/test_parse_core.Po
	-rm -f tests/$(DEPDIR)/test_parse_list_data.Po
	-rm -f tests/$(DEPDIR)/test_parse_minimal.Po
	-rm -f tests/$(DEPDIR)/test_parse_nested.Po
	-rm -f tests/$(DEPDIR)/test_parse_simple_containers.Po
	-rm -f tests/$(DEPDIR)/test_parse_simple_data.Po
	-rm -f tests/$(DEPDIR)/test_parse_simple_loops.Po
	-rm -f tests/$(DEPDIR)/test_parse_table_data.Po
	-rm -f tests/$(DEPDIR)/test_parse_text_fields.Po
	-rm -f tests/$(DEPDIR)/test_parse_triple.Po
	-rm -f tests/$(DEPDIR)/test_parse_unicode.Po
	-rm -f tests/$(DEPDIR)/test_table_elements.Po
	-rm -f tests/$(DEPDIR)/test_ustrdup.Po
	-rm -f tests/$(DEPDIR)/test_value_autoinit_numb.Po
	-rm -f tests/$(DEPDIR)/test_value_clone.Po
	-rm -f tests/$(DEPDIR)/test_value_copy_char.Po
	-rm -f tests/$(DEPDIR)/test_value_create.Po
	-rm -f tests/$(DEPDIR)/test_value_get_number.Po
	-rm -f tests/$(DEPDIR)/test_value_init_char.Po
	-rm -f tests/$(DEPDIR)/test_value_init_numb.Po
	-rm -f tests/$(DEPDIR)/test_value_parse_numb.Po
	-rm -f tests/$(DEPDIR)/test_value_set_quoted.Po
	-rm -f tests/$(DEPDIR)/test_value_try_quoted.Po
	-rm -f tests/$(DEPDIR)/test_write_11.Po
	-rm -f tests/$(DEPDIR)/test_write_complex.Po
	-rm -f tests/$(DEPDIR)/test_write_frames.Po
	-rm -f tests/$(DEPDIR)/test_write_loops.Po
	-rm -f tests/$(DEPDIR)/test_write_simple.Po
	-rm -f tools/$(DEPDIR)/linguist.Po
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-binPROGRAMS uninstall-includeHEADERS \
	uninstall-libLTLIBRARIES
	@$(NORMAL_INSTALL)
	$(MAKE) $(AM_MAKEFLAGS) uninstall-hook
.MAKE: all check check-am install install-am install-exec-am \
	install-strip uninstall-am

.PHONY: CTAGS GTAGS TAGS all all-am am--depfiles check check-TESTS \
	check-am clean clean-binPROGRAMS clean-checkPROGRAMS \
	clean-generic clean-libLTLIBRARIES clean-libtool cscopelist-am \
	ctags ctags-am distclean distclean-compile distclean-generic \
	distclean-libtool distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am install-binPROGRAMS \
	install-data install-data-am install-dvi install-dvi-am \
	install-exec install-exec-am install-exec-hook install-html \
	install-html-am install-includeHEADERS install-info \
	install-info-am install-libLTLIBRARIES install-man install-pdf \
	install-pdf-am install-ps install-ps-am install-strip \
	installcheck installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	recheck tags tags-am uninstall uninstall-am \
	uninstall-binPROGRAMS uninstall-hook uninstall-includeHEADERS \
	uninstall-libLTLIBRARIES

.PRECIOUS: Makefile


internal/schema.h: $(top_srcdir)/misc/cif_schema.sql Makefile.am
	@$(MKDIR_P) internal
	echo "/*" > $@
	echo " * This file is automatically generated from cif_schema.sql." >> $@
	echo " */" >> $@
	echo "#ifndef INTERNAL_SCHEMA_H" >> $@
	echo "#define INTERNAL_SCHEMA_H" >> $@
	echo "static const char * const schema_statements[] = {" >> $@
	$(GREP) '[^[:space:]]' $< \
	  | $(GREP) -v '\s*--' \
	  | $(SED) -e '$(SED_SQL_MANGLER)' \
	  >> $@
	echo ', (char *) 0' >> $@
	echo "};" >> $@
	echo "#endif" >> $@

internal/version.h: $(top_srcdir)/configure
	@$(MKDIR_P) internal
	echo "/*" > $@
	echo " * This file is automatically generated" >> $@
	echo " */" >> $@
	echo "#ifndef INTERNAL_VERSION_H" >> $@
	echo "#define INTERNAL_VERSION_H" >> $@
	echo '#define CIF_API_VERSION "$(PACKAGE_VERSION)"' >> $@
	echo "#endif" >> $@

install-exec-hook: $(INSTALL_HOOKS)
uninstall-hook: $(UNINSTALL_HOOKS)

install_import_lib:
	gendef $(DESTDIR)$(bindir)/libcif.dll
	dlltool -k --input-def libcif.def --output-lib $(DESTDIR)$(bindir)/libcif.lib

uninstall_import_lib:
	rm $(DESTDIR)$(bindir)/libcif.lib

.PHONY: install_import_lib

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
